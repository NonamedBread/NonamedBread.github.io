I"q1<h1 id="31-데이터-전환">31. 데이터 전환</h1>

<h2 id="데이터-전환">데이터 전환</h2>

<ul>
  <li>현재 운영 중인 시스템의 데이터를 추출하고 이를 변환한 후 새로운 개발 시스템에서 사용할 수 있도록 적재하는 과정</li>
</ul>

<h2 id="데이터-전환-계획서">데이터 전환 계획서</h2>

<ul>
  <li>데이터 전환에 필요한 모든 계획을 기록하는 문서</li>
</ul>

<h1 id="32-데이터-검증">32. 데이터 검증</h1>

<h2 id="데이터-검증">데이터 검증</h2>

<ul>
  <li>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행 되었는지 여르를 확인하는 과정</li>
</ul>

<h2 id="검증-방법에-따른-분류">검증 방법에 따른 분류</h2>

<table>
  <thead>
    <tr>
      <th>검증 방법</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>로그검증</td>
      <td>데이터 전환 과정에서 작성하는 추출, 전환, 적재 로그를 검증</td>
    </tr>
    <tr>
      <td>기본 항목 검증</td>
      <td>로그 검증 외에 별도로 요청된 검증 항목에 대해 검증</td>
    </tr>
    <tr>
      <td>응용 프로그램 검증</td>
      <td>응용 프로그램을 통한 데이터 전환의 정합성을 검증</td>
    </tr>
    <tr>
      <td>응용 데이터 검증</td>
      <td>사전에 정의된 업무 규칙을 기준으로 데이터 전환의 정합성을 검증</td>
    </tr>
    <tr>
      <td>값 검증</td>
      <td>숫자 항목의 합계 검증, 코드 데이터의 범위 검증, 속성 변경에 따른 값 검증</td>
    </tr>
  </tbody>
</table>

<h1 id="33-오류-데이터-측정-및-정제">33. 오류 데이터 측정 및 정제</h1>

<blockquote>
  <p>오류상태, 데이터 정제 요청서, 데이터 정제보고서에 대해 학습</p>
</blockquote>

<h2 id="오류-데이터-측정-및-정제">오류 데이터 측정 및 정제</h2>

<ul>
  <li>고품질의 데이터를 운영 및 관리 하기 위해 수행</li>
</ul>

<table>
  <thead>
    <tr>
      <th>진행 과정</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>데이터 품질 분석</td>
      <td>오류 데이터를 찾기 위해 원천 및 목적 시스템 데이터의 정합성 여부를 확인하는 작업</td>
    </tr>
    <tr>
      <td>오류 데이터 측정</td>
      <td>데이터 품질 분석을 기반으로 정상 데이터와 오류 데이터의 수를 측정하여 오류 관리 목록을 작성</td>
    </tr>
    <tr>
      <td>오류 데이터 정제</td>
      <td>오류 관리 목록의 각 항목을 분석하여 원천 데이터를 정제하거나 전환 프로그램을 수정</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>위에서 아래 순으로 진행 (데오오)</p>
</blockquote>

<h2 id="오류-상태">오류 상태</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Open</td>
      <td>오류가 보고만 되고 분석되지 않은 상태</td>
    </tr>
    <tr>
      <td>Assigned</td>
      <td>오류의 영향 분석 및 수정을 위해 개발자에게 오류를 전달한 상태</td>
    </tr>
    <tr>
      <td>Fixed</td>
      <td>개발자가 오류를 수정한 상태</td>
    </tr>
    <tr>
      <td>Closed</td>
      <td>수정된 오류에 대해 테스트를 다시 했을 때 오류가 발견되지 않은 상태</td>
    </tr>
    <tr>
      <td>Deferred</td>
      <td>오류 수정을 연기한 상태</td>
    </tr>
    <tr>
      <td>Clarified/Classified</td>
      <td>보고된 오류를 관련자들이 확인 했을 때 오류가 아니라고 확인된 상태</td>
    </tr>
  </tbody>
</table>

<h2 id="데이터-정제요청서">데이터 정제요청서</h2>

<ul>
  <li>데이터 정제와 관련된 전반적인 내용을 문서로 작성한 것</li>
</ul>

<h2 id="데이터-정제보고서">데이터 정제보고서</h2>

<ul>
  <li>정제된 원천 데이터가 정상적으로 정제 되었는지 확인한 결과를 문서로 작성한 것</li>
</ul>

<h1 id="34-데이터베이스-개요">34. 데이터베이스 개요</h1>

<h2 id="데이터-저장소">데이터 저장소</h2>

<ul>
  <li>데이터들을 논리적인 구조로 조직화하거나, 물리적인 공간에 구축한 것을 의미</li>
</ul>

<h2 id="데이터베이스database">데이터베이스(Database)</h2>

<ul>
  <li>공동으로 사용될 데이터를 중복을 배제하여 통합하고, 저장장치에 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터</li>
</ul>

<h2 id="dbmsdatabase-management-system-데이터베이스-관리-시스템">DBMS(DataBase Management System; 데이터베이스 관리 시스템)</h2>

<ul>
  <li>
    <p>사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해주는 소프트웨어</p>
  </li>
  <li>
    <p>필수기능 3가지</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>정의(Definition</td>
      <td>데이터의 형(Type)과 구조에 대해한 저의, 이용방식, 제약 조건등을 명시하는 기능</td>
    </tr>
    <tr>
      <td>조작(Manipulation)</td>
      <td>데이터 검색, 갱신, 삽입, 삭제 등을 위해 인터페이스 수단을 제공하는 기능</td>
    </tr>
    <tr>
      <td>제어(Control)</td>
      <td>데이터의 무결성, 보안, 권한 검사, 병행 제어를 제공하는 기능</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>정조제</p>
</blockquote>

<h2 id="데이터의-독립성">데이터의 독립성</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>논리적 독립성</td>
      <td>응용 프로그램과 데이터베이스를 독립시킴으로써, 데이터의 논리적 구조를 변경시키더라도 응용 프로그램은 영향을 받지 않음</td>
    </tr>
    <tr>
      <td>물리적 독립성</td>
      <td>응용 프로그램과 보조기억장치 같은 물리적 장치를 독립시킴으로써, 디스크를 추가?변경하더라도 응용 프로그램은 영향을 받지 않음</td>
    </tr>
  </tbody>
</table>

<h2 id="스키마schema">스키마(Schema)</h2>
<ul>
  <li>데이터베이스의 구조와 제약조건에 관한 전반적인 명세를 기술한 것</li>
</ul>

<blockquote>
  <p>3계층 개념 명확히</p>
</blockquote>

<table>
  <thead>
    <tr>
      <th>종류</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>외부 스키마</td>
      <td>사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 것</td>
    </tr>
    <tr>
      <td>개념 스키마</td>
      <td>데이터베이스의 전체적인 논리적 구조</td>
    </tr>
    <tr>
      <td>내부 스키마</td>
      <td>물리적 저장장치의 입장에서 본 데이터베이스 구조</td>
    </tr>
  </tbody>
</table>

<h1 id="35-데이터베이스-설계">35. 데이터베이스 설계</h1>

<blockquote>
  <p>설계 순서와 각 단계별 특징 중요</p>
</blockquote>

<h2 id="데이터베이스-설계-순서">데이터베이스 설계 순서</h2>

<ol>
  <li>
    <p>요구 조건 분석 : 요구 조건 명세서 작성</p>
  </li>
  <li>
    <p>개념적 설계 : 개념 스키마, 트랜잭션 모델링, E-R 모델</p>
  </li>
  <li>
    <p>논리적 설계 : 목표 DBMS에 맞는 논리 스키마 설계, 트랜잭션 인터페이스 설계</p>
  </li>
  <li>
    <p>물리적 설계 : 목표 DBMS에 맞는 물리적 구조의 데이터로 변환</p>
  </li>
  <li>
    <p>구현 : 목표 DBMS의 DDL(데이터 정의어)로 데이터베이스 생성, 트랜잭션 작성</p>
  </li>
</ol>

<blockquote>
  <p>요개논물구</p>
</blockquote>

<h2 id="요구-조건-분석">요구 조건 분석</h2>

<ul>
  <li>데이터베이스가 필요한 용도를 파악 하는 것</li>
</ul>

<h2 id="개념적-설계정보-모델링-개념화">개념적 설계(정보 모델링, 개념화)</h2>

<ul>
  <li>현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정</li>
</ul>

<h2 id="논리적-설계데이터-모델링">논리적 설계(데이터 모델링)</h2>

<p>현실 세계에서 발생하는 자료를 특정 DBMS가 지원하는 논리적 자료 구조로 변환(mapping)시키는 과정</p>

<h2 id="물리적-설계데이터-구조화">물리적 설계(데이터 구조화)</h2>

<ul>
  <li>논리적 구조로 표현된 데이터를 물리적 구조의 데이터로 변환하는 과정</li>
</ul>

<h2 id="데이터베이스-구현">데이터베이스 구현</h2>

<ul>
  <li>논리적 설계와 물리적 설계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정</li>
</ul>

<h1 id="36-데이터-모델의-개념">36. 데이터 모델의 개념</h1>

<blockquote>
  <p>데이터 모델, 구성요소, 종류, 표시할 요소 등에 대한 개념 기억</p>
</blockquote>

<h2 id="데이터-모델">데이터 모델</h2>

<p>현실 세계의 정보들을 체계적으로 표현한 개념적 모형</p>

<h2 id="개념적-데이터-모델">개념적 데이터 모델</h2>

<ul>
  <li>현실 세계에 대한 인가느이 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정</li>
</ul>

<h2 id="논리적-데이터-모델">논리적 데이터 모델</h2>

<ul>
  <li>개념적 구조를 컴퓨터의 세계의 환경에 맞도록 변환하는 과정</li>
</ul>

<h2 id="데이터-모델에-표시할-요소">데이터 모델에 표시할 요소</h2>

<table>
  <thead>
    <tr>
      <th>요소</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>구조(Structure)</td>
      <td>논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질 표현</td>
    </tr>
    <tr>
      <td>연산(Operation)</td>
      <td>데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구</td>
    </tr>
    <tr>
      <td>제약 조건(Constraint)</td>
      <td>데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>구조, 연산, 제약 조건의 의미 기억 (구연제)</p>
</blockquote>

<h1 id="37-데이터-모델의-구성요소">37. 데이터 모델의 구성요소</h1>

<blockquote>
  <p>개속관 개념 숙지</p>
</blockquote>

<h2 id="개체entity">개체(Entity)</h2>

<ul>
  <li>데이터베이스에 표현하려는 개념이나 정보 단위 같은 현실 세계의 대상체</li>
</ul>

<h2 id="속성attribute">속성(Attribute)</h2>

<ul>
  <li>데이터베이스를 구성하는 가장 작은 논리적 단위</li>
</ul>

<h2 id="속성의-특성에-따른-분류">속성의 특성에 따른 분류</h2>

<table>
  <thead>
    <tr>
      <th>분류</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>기본 속성(Basic Attribute)</td>
      <td>업무 분석을 통해 정의한 속성<br />속성 중 가장 많고 일반적임</td>
    </tr>
    <tr>
      <td>설계 속성(Designed Attribute)</td>
      <td>원래 업무상 존재하지 않고 설계 과정에서 도출해내는 속성</td>
    </tr>
    <tr>
      <td>파생 속성(Derived Attribute)</td>
      <td>다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성</td>
    </tr>
  </tbody>
</table>

<h2 id="관계relationship">관계(Relationship)</h2>

<ul>
  <li>개체와 개체 사이의 논리적인 연결</li>
</ul>

<h2 id="관계의-형태">관계의 형태</h2>

<table>
  <thead>
    <tr>
      <th>형태</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>일 대 일(1:1)</td>
      <td>개체 집합 A의 각 원소가 개체 집합 B의 원소 한개와 대응하는 관계</td>
    </tr>
    <tr>
      <td>일 대 다(1:N)</td>
      <td>개체 집합A의 각 원소는 개체 집합 B의 원소 여러개와 대응하고 있지만, 개체 집합 B의 각 원소는 개체 집합 A의 원소 한 개와 대응하는 관계</td>
    </tr>
    <tr>
      <td>다 대 다(N:M)</td>
      <td>개체 집합 A의 원소는 개체 집합 B의 원소 여러개와 대응하고, 개체 집합 B의 각 원소도 개체 집합 A의 원소 여러개와 대응하는 관계</td>
    </tr>
  </tbody>
</table>

:ET