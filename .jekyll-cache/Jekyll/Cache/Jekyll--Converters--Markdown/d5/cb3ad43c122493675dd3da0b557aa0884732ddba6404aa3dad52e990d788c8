I":$<h1 id="11-uml---관계relationship">11. UML - 관계(Relationship)</h1>

<h2 id="관계relationships">관계(Relationships)</h2>

<ul>
  <li>
    <p>사물과 사물 사이의 연관성을 표현하는 것</p>
  </li>
  <li>
    <p>관계의 종류</p>
    <ul>
      <li>연관 관계</li>
      <li>집합 관계</li>
      <li>포함 관계</li>
      <li>일반화 관계</li>
      <li>의존 관계</li>
      <li>실체화 관계</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>개별적인 개념과 표현 방법을 확실히 숙지</p>
</blockquote>

<h2 id="연관association-관계">연관(Association) 관계</h2>

<ul>
  <li>
    <p>2개 이상의 사물이 서로 관련되어 있는 관계</p>
  </li>
  <li>
    <p>실선으로 연결하여 표현</p>
  </li>
  <li>
    <p>방향성은 화살표로 표현</p>
  </li>
  <li>
    <p>양방향 관게는 실선으로만 연결</p>
  </li>
  <li>
    <p>다중도를 *로 실선위에 표기</p>
  </li>
</ul>

<table>
    <tr>
      <td>다중도</td>
      <td>의미</td>
    </tr>
    <tr>
      <td>1</td>
      <td>1개의 객체과 연관되어 있음</td>
    </tr>
    <tr>
      <td>n</td>
      <td>n개의 객체가 연관되어 있음</td>
    </tr>
    <tr>
      <td>0..1</td>
      <td>연관된 객체가 없거나 1개만 존재함</td>
    </tr>
    <tr>
      <td>0..* 또는 *</td>
      <td>연관된 객체가 없거나 다수일 수 있음</td>
    </tr>
    <tr>
      <td>1..*</td>
      <td>연관된 객체가 적어도 1개 이상임</td>
    </tr>
    <tr>
      <td>n..*</td>
      <td>연관된 객체가 적어도 n개 이상임</td>
    </tr>
    <tr>
      <td>n..m</td>
      <td>연관된 객체가 최소 n개에서 최대 m개임</td>
    </tr>
  </table>

<blockquote>
  <p>집은 한사람에 의해서만 소유가 가능하고 사람은 집을 하나만 소유가 가능 <image src="https://user-images.githubusercontent.com/93482597/163821865-5ccbb9d0-d5b7-4dd1-aa8f-58c8a0eab9c5.png"></image> 학생은 한 명 이상의 선생님으로부터 가르침을 받고 선생님은 한 명 이상의 학생을 가르친다 <image src="https://user-images.githubusercontent.com/93482597/163822091-6e659e9c-0d4c-424b-a6e2-3557d8fc4834.png"></image></p>
</blockquote>

<h2 id="집합aggregation-관계">집합(Aggregation) 관계</h2>

<ul>
  <li>하나의 사물이 다른 사물에 포함되어 있는 관계</li>
  <li>포함하는 쪽과 포함되는 쪽은 서로 독립적</li>
  <li>포함되는 쪽에서 포함하는 쪽으로 속이 빈 마름모를 연결</li>
</ul>

<blockquote>
  <p>프린터는 컴퓨터에 연결해서 사용할 수 있으며, 다른 컴퓨터에도 연결해서 사용 가능<image src="https://user-images.githubusercontent.com/93482597/163823157-1b6414c9-71aa-4db3-bc62-e88f0bd758b7.png"></image></p>
</blockquote>

<h2 id="포함composition-관계">포함(Composition) 관계</h2>

<ul>
  <li>포함하는 사물의 변화가 포함되는 사물에게 영향을 미치는 관계</li>
  <li>포함하는 쪽과 포함되는 쪽은 서로 독립될 수 없고 생명주기를 함께함</li>
  <li>포함되는 쪽에서 포함하는 쪽으로 속이 채워진 마름모를 연결하여 표현</li>
</ul>

<blockquote>
  <p>문을 열 수 있는 키는 하나이며, 해당 키로 다른 문은 열 수 없다. 문이 없어지면 키도 더 이상 필요하지 않다. <image src="https://user-images.githubusercontent.com/93482597/163823548-c2165327-2534-4716-8aba-6dd9db017a73.png"></image></p>
</blockquote>

<h2 id="일반화generalization-관계">일반화(Generalization) 관계</h2>
<ul>
  <li>하나의 사물이 다른 사물에 비해 더 일반적이거나 구체적인 관계</li>
  <li>일반적인 개념을 상위(부모), 구체적인 개념을 하위(자식)라고 부름</li>
  <li>구체적인 사물에서 일반적인 사물 쪽으로 속이 빈 화살표를 연결하여 표현</li>
</ul>

<blockquote>
  <p>아메리카노와 에스프레소는 커피, 커피에는 아메리카노와 에스프레소가 있다. <image src="https://user-images.githubusercontent.com/93482597/163824743-3f52dee1-8c9e-4616-b457-ed73ad9aa4ac.png"></image></p>
</blockquote>

<h2 id="의존dependency-관계">의존(Dependency) 관계</h2>

<ul>
  <li>서로에게 영향을 주는 짧은 시간 동안만 연관을 유지하는 관계</li>
  <li>사물의 변화가 다른 사물에도 영향을 미치는 관계</li>
  <li>영향을 주는사물(이용자)이 영향을 받는 사물(제공자) 쪽은로 점선 화살표를 연결하여 표현</li>
</ul>

<blockquote>
  <p>등급이 높으면 할인율을 적용하고 등급이 낮으면 할인율을 적용하지 않는다. <image src="https://user-images.githubusercontent.com/93482597/163825472-d234b8f1-73bc-4575-a7ca-620304d4038e.png"></image></p>
</blockquote>

<h2 id="실체화realization-관계">실체화(Realization) 관계</h2>

<ul>
  <li>사물이 할 수 있거나 해야 하는 기능으로, 서로를 그릅화 할 수 있는 관계</li>
  <li>사물에서 기능 쪽으로 속이 빈 점선 화살표를 연결</li>
</ul>

<blockquote>
  <p>비행기는 날 수 있고 새도 날 수 있다. 그러므로 비행기와 새는 날 수 있다는 행위로 그룹화 할 수 있다. <image src="https://user-images.githubusercontent.com/93482597/163825914-bed6d330-0d3d-4bfb-aaa6-4e564dae02b1.png"></image></p>
</blockquote>

<h1 id="12-uml---다이어-그램">12. UML - 다이어 그램</h1>

<h2 id="다이어그램diagram">다이어그램(Diagram)</h2>
<ul>
  <li>사물과 관계를 도형으로 표현한 것</li>
  <li>정적 모델링에서는 주로 구조적 다이어그램</li>
  <li>동적 모델링에서는 주로 행위 다이어그램</li>
</ul>

<blockquote>
  <p>다이어그램이 무엇인지, 구조적, 행위 다이어그램에 어떤것들이 있는지 암기</p>
</blockquote>

<h2 id="구조적structural-다이어그램-종류">구조적(Structural) 다이어그램 종류</h2>

<table>
  <tr>
    <th>
    종류
    </th>
    <th>
    내용
    </th>
  </tr>
  <tr>
    <td>
    클래스 다이어그램<br />(Class Diagram)
    </td>
    <td>
    클래스와 클래스가 가지는 속성, 클래스 사이의 관계를 표현함
    </td>
  </tr>
  <tr>
    <td>
    객체 다이어그램<br /> (Object Diagram)
    </td>
    <td>
    클래스에 속한 사물(객체)들, 즉 인스턴스(Instance)를 특정 시점의 객체와 객체 사이의 관계로 표현함<br />럼바우(Rumbaugh) 객체지향 분석 기법에서 객체 모델링에 활용됨
    </td>
  </tr>
  <tr>
    <td>
    컴포넌트 다이어그램<br />(Component Diagram)
    </td>
    <td>
    실제 구현 모듈인 컴포넌트 간의 관계나 컴포넌트 간의 인터페이스를 표현함<br />구현 단계에서 사용됨
    </td>
  </tr>
  <tr>
    <td>
    배치 다이어그램<br />(Deployment Diagram)
    </td>
    <td>
    결과물, 프로세스, 컴포넌트 등 물리적 요소들의 위치를 표현함<br />구현 단계에서 사용됨
    </td>
  </tr>
  <tr>
    <td>
    복합체 구조 다이어그램<br />(Composite Structure Diagram)
    </td>
    <td>
    클래스나 컴포넌트가 복합 구조를 갖는 경우 그 내부 구조를 표현함
    </td>
  </tr>
  <tr>
    <td>
    패키지 다이어그램<br />(Package Diagram)
    </td>
    <td>
    유스케이스나 클래스 등의 모델 요소들을 그룹화한 패키지들의 관계를 표현함
    </td>
  </tr>

</table>

<h2 id="행위behavioral-다이어그램의-종류">행위(Behavioral) 다이어그램의 종류</h2>

<table>
  <tr>
    <th>종류</th>
    <th>내용</th>
  </tr>
  <tr>
    <td>유스케이스 다이어그램<br />(Use Case Diagram)</td>
    <td>사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용<br />사용자(Actor)와 사용사례(Use Case)로 구성됨</td>
  </tr>
  <tr>
    <td>시퀀스 다이어그램<br /></td>
    <td>상호 작용하는 시스템이나 객체들이 주고 받는 메시지를 표현</td>
  </tr>
  <tr>
    <td>커뮤니케이션 다이어그램<br />(Communication Diagram)</td>
    <td>동작에 참여하는 객체들이 주고받는 메시지와 객체들 간의 연관 관계를 표현</td>
  <tr>
  <tr>
    <td>상태 다이어그램<br />(State Diagram)</td>
    <td>하나의 객체가 자신이 속한 클래스의 상태 변화 혹은 다른 객체와의 상호 작용에 따라 상태가 어떻게 변화하는지를 표현<br />럼바우(Rumbaugh) 객체지향 분석 기법에서 동적 모델링에 활용</td>
  </tr>
  <tr>
    <td>활동 다이어그램<br />(Activity Diagram)</td>
    <td>시스템이 어떤 기능을 수행하는지 객체의 처리 로직이나 조건에 따른 처리의 흐름을 순서에 따라 표현함</td>
  </tr>
  <tr>
    <td>상호작용 개요 다이어그램<br />(Interaction Overview Diagram)</td>
    <td>상호작용 다이어그램 간에 제어 흐름을 표현</td>
  </tr>
  <tr>
    <td>타이밍 다이어그램<br />(Timing Diagram)</td>
    <td>객체 상태 변화와 시간 제약을 명시적으로 표현함</td>
  </tr>
&lt;/table&gt;


## 스테레오 타입(Stereotype)
</tr></tr></table>
:ET