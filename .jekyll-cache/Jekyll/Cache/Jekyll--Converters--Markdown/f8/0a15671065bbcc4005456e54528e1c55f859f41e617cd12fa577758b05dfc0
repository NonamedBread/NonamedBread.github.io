I"J<h1 id="14활동activity-다이어그램">14.활동(Activity) 다이어그램</h1>

<ul>
  <li>
    <p>자료 흐릅도(DFD, Data Flow Diagram)와 유사</p>
  </li>
  <li>
    <p>시스템이 어떤 기능을 수행하는지 객체의 처리 로직이나 조건에 따른 처리의 흐름을 순서에 따라 표현한 것</p>
  </li>
  <li>
    <p>유스케이스 안에서 혹은 유스케이스 사이의 복잡한 처리의 흐름을 표현</p>
  </li>
</ul>

<h2 id="활동activity-다이어그램-구성-요소">활동(Activity) 다이어그램 구성 요소</h2>

<table>
  <tr>
    <th>
      구성요소
    </th>
    <th>
      표현 방법
    </th>
    <th>
    내용
    </th>
  </tr>
  <tr>
    <td>
      액션(Action) / 액티비티(Activity)
    </td>
    <td>
     액션
     <image src="https://user-images.githubusercontent.com/93482597/163842008-e7bcb2e6-ed40-41a9-9729-547c839e7f4e.png" />
     액티비티
     <image src="https://user-images.githubusercontent.com/93482597/163842165-f2abf7d7-185b-4d9f-be98-3e12100087c9.png" />
    </td>
    <td>
      액션 : 더 이상 분해할 수 없는 단일 작업<br />액티비티 : 몇 개의 액션으로 분리될 수 있는 작업
    </td>
  </tr>
  <tr>
    <td>
    시작노드
    </td>
    <td>
      <image src="https://user-images.githubusercontent.com/93482597/163842710-a9fe1c28-b987-425d-9c6e-136a68add711.png" />
    </td>
    <td>
      액션이나 액티비티가 시작됨을 표현한 것
    </td>
  </tr>
  <tr>
    <td>
      종료 노드
    </td>
    <td>
      <image src="https://user-images.githubusercontent.com/93482597/163842454-5826ff6e-54f4-45a6-9d59-7288fa5aa603.png" />
    </td>
    <td>
     액티비티 안의 모든 흐름이 종료됨을 표현
    </td>
  </tr>
  <tr>
    <td>
      조건(판단) 노드
    </td>
    <td>
      <image src="https://user-images.githubusercontent.com/93482597/163842939-86d69c88-7c64-45a9-91b9-5fec8a31799f.png" />
    </td>
    <td>
      조건에 따라 제어의 흐름이 분리됨을 표현
    </td>
  </tr>
  <tr>
    <td>
    병합 노드
    </td>
    <td>
      <image src="https://user-images.githubusercontent.com/93482597/163843327-29febc2d-e0d5-4d54-9d42-b908f818746a.png" />
    </td>
    <td>
      여러 경로의 흐름이 하나로 합쳐짐을 표현
    </td>
  </tr>
  <tr>
    <td>
     포크(Fork) 노드
    </td>
    <td>
    <image src="https://user-images.githubusercontent.com/93482597/163843596-04e31644-56f3-4276-a148-a95f6ab0cc54.png" />
    </td>
    <td>
    액티비티의 흐름이 분리되어 수행됨을 표현
    </td>
  </tr>
  <tr>
    <td>
    조인(Join) 노드
    </td>
    <td>
    <image src="https://user-images.githubusercontent.com/93482597/163843736-4de59faf-0dab-4ae7-b5bc-3529399271c1.png" />
    </td>
    <td>
      분리되어 수행되던 액티비티의 흐름이 다시 합쳐짐을 표현
    </td>
  </tr>
  <tr>
    <td>
      스윔레인(Swim Lane)
    </td>
    <td>
      <image src="https://user-images.githubusercontent.com/93482597/163846448-bce172e2-f785-436e-8e30-420b954c8a8e.png" />
    </td>
    <td>
     액티비티 수행을 담당하는 주체를 구분하는 선<br />가로 또는 세로 실선을 그어 구분
    </td>
  </tr>
</table>

<h1 id="15-클래스class-다이어그램">15. 클래스(Class) 다이어그램</h1>

<h2 id="클래스-다이어그램">클래스 다이어그램</h2>

<ul>
  <li>시스템을 구성하는 요소에 대해 이해할 수 있는 구조적 다이어그램</li>
  <li>시스템을 구성하는 요소를 문서화 하는데 사용</li>
  <li>코딩에 필요한 객체의 속성, 함수 등의 정보를 잘 표현하고 있어 시스템을 모델링하는 데자주 사용</li>
  <li>
    <p>클래스, 제약조건, 관계 등으로 구성</p>
  </li>
  <li>클래스 다이어그램은 UML 다이어그램 중 객체(Object)들을 클래스로 추상화하여 표현하는 다이어그램으로 대표적인 구조적 다이어그램이다.</li>
  <li>클래스는 각각의 객체들이 갖는 속성과 메소드를 표현한 것으로 3개의 구획으로 나눠 이름, 속성, 메소드를 표기한다.</li>
</ul>

<h2 id="연관-클래스">연관 클래스</h2>

<ul>
  <li>연관 관계에 있는 두 클래스에 추가적으로 표현해야 할 속성이나 오퍼레이션이 있는 경우 생성하는 클래스</li>
  <li>두 클래스의 연관 관계를 나타내는 선의 가운데로부터 점선을 연관클래스로 이어 표시</li>
  <li>연관클래스의 이름은 연관 관계의 이름을 이용해 지정</li>
</ul>

<h1 id="16-시퀀스sequence-다이어그램">16. 시퀀스(Sequence) 다이어그램</h1>

<h2 id="구성-요소">구성 요소</h2>

<ul>
  <li>액터(Actor) : 시스템으로부터 서비스를 요청하는 외부 요소로, 사람이나 외부 시스템을 의미</li>
  <li>객체(Object)  : 메시지를 주고받는 주체</li>
  <li>생명선(Lifeline) : 객체가 메모리에 존재하는 기간으로, 객체 아래쪽에 점선을 그어 표현/ 객체 소멸이 표시된 기간까지 존재</li>
  <li>실행 상자(Active Box, 활성 상자) : 객체가 메시지를 주고 받으며 구동되고 있음을 표현</li>
  <li>메시지(Message) : 객체가 상호 작용을 위해 주고받는 메시지</li>
  <li>객체 소멸 : 해당 객체가 더이상 메모리에 존재하지 않음을 표현</li>
  <li>프레임(Frame) : 다이어그램의 전체 또는 일부를 묶어 표현</li>
</ul>

<h2 id="특징">특징</h2>

<ul>
  <li>시스텡이나 객체들이 메시지를 주고받으며 상호 작용하는 과정을 그림으로 표현</li>
</ul>

:ET