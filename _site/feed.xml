<<<<<<< HEAD
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-15T23:45:29+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">NonamedBread</title><subtitle>An amazing website.</subtitle><author><name>Lee Kyuhwan</name></author><entry><title type="html">Blockchain Explorer</title><link href="http://localhost:4000/project/blockchainExplorer00/" rel="alternate" type="text/html" title="Blockchain Explorer" /><published>2022-05-15T00:00:00+09:00</published><updated>2022-05-15T00:00:00+09:00</updated><id>http://localhost:4000/project/blockchainExplorer00</id><content type="html" xml:base="http://localhost:4000/project/blockchainExplorer00/"><![CDATA[<image src="https://user-images.githubusercontent.com/93482597/168478733-f6457155-2107-4a45-900b-fe63be2df64f.gif" />]]></content><author><name>Lee Kyuhwan</name></author><category term="Project" /><category term="Project" /><category term="Blockchain" /></entry><entry><title type="html">수제비 실기 출제예상 문제 정리</title><link href="http://localhost:4000/eip_ps/%EC%88%98%EC%A0%9C%EB%B9%84%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="수제비 실기 출제예상 문제 정리" /><published>2022-05-06T00:00:00+09:00</published><updated>2022-05-06T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EC%88%98%EC%A0%9C%EB%B9%84%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EC%88%98%EC%A0%9C%EB%B9%84%EC%A0%95%EB%A6%AC/"><![CDATA[<ul>
  <li>
    <p>대체 불가능 토큰(Non-fungible token; NFT) : 블록체인 기술을 이용해서 디지털 자산의 소유주를 증명하는 가상의 토큰(token)</p>
  </li>
  <li>
    <p>메타버스(Metaverse) : 초월을 의미하는 단어와 세계, 우주를 의미하는 단어를 합성한 신조어로 현실을 디지털 기반의 가상 세계로 확장해 가상 공간에서 모든 활동을 할 수 있게 만드는 시스템</p>
  </li>
  <li>
    <p>OUI(Organic User Interface)</p>
  </li>
  <li>
    <p>Facade (pattern) : 복잡한 시스템에 대하여 단순한 인터페이스를 제공함으로써 사용자와 시스템 간 또는 여타 시스템과의 결합도를 낮추어 시스템 구조에 대한 파악을 쉽게 하는 패턴</p>
  </li>
  <li>
    <p>Strategy (pattern) : 스스로 캡슐화한 다음, 필요할 떄 서로 교환해서 사용할 수 있게 하는 패턴</p>
  </li>
  <li>
    <p>스크럼 마스터(Scrum Master) : 스크럼 프로세스를 따르고, 프로젝트 리더로 팀이 스크럼을 효과적으로 활용할 수 있도록 보장하는 역할 등을 맡느나.</p>
  </li>
  <li>
    <p>스프린트(Sprint) 2~4주의 짧은 개발 기간으로 반복적 수행을 통해 개발품질을 향상시킬 수 있다.</p>
  </li>
  <li>
    <p>번 다운 차트 (Burn Down Chart) : 남아있는 백로그 대비 시간을 그래픽적으로 표현한 차트</p>
  </li>
  <li>
    <p>간트(GANTT) : 시간선(Time-lin) 차트라고 하고, 작업이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시하는 차트</p>
  </li>
  <li>
    <p>퍼트(PERT) : 프로젝트에 필요한 전체 작업의 상호관계를 표시하는 네트워크로 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 알 수 있는 것</p>
  </li>
  <li>
    <p>연산(Operation) : 데이터 모델의</p>
  </li>
</ul>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry><entry><title type="html">8.SQL응용 118~</title><link href="http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900/" rel="alternate" type="text/html" title="8.SQL응용 118~" /><published>2022-05-05T00:00:00+09:00</published><updated>2022-05-05T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900</id><content type="html" xml:base="http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900/"><![CDATA[<h1 id="118-sql---ddl">118. SQL - DDL</h1>
=======
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-09T16:58:05+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">NonamedBread</title><subtitle>An amazing website.</subtitle><author><name>Lee Kyuhwan</name></author><entry><title type="html">삼각형 판별하기</title><link href="http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="삼각형 판별하기" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0/"><![CDATA[<p>세 변의 길이를 가지고 삼각형이 될 수 있는지 판별하는 알고리즘 
제일 긴 한변의 길이가 나머지 두 변의 길이의 합보다 작거나 같아야 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">){</span>
                <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">YES</span><span class="dl">'</span><span class="p">,</span> <span class="nx">max</span><span class="p">;</span>
                <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span> <span class="o">+</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span> <span class="nx">max</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span>
                <span class="k">else</span> <span class="nx">max</span> <span class="o">=</span> <span class="nx">b</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">max</span><span class="p">)</span> <span class="nx">max</span> <span class="o">=</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">((</span><span class="nx">sum</span><span class="o">-</span><span class="nx">max</span><span class="p">)</span><span class="o">&lt;=</span> <span class="nx">max</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">NO</span><span class="dl">"</span><span class="p">;</span>
                <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">solution</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">));</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">solution</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">17</span><span class="p">));</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">세 수 중 최솟값</title><link href="http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92/" rel="alternate" type="text/html" title="세 수 중 최솟값" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92/"><![CDATA[<p>조건문을 이용해 세 변수의 크기를 비교하여 문제 풀이</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">){</span>
                <span class="kd">let</span> <span class="nx">answer</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
                <span class="k">else</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">b</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">c</span> <span class="o">&lt;</span> <span class="nx">answer</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
            <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">WSL2 Jekyll 세팅</title><link href="http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="WSL2 Jekyll 세팅" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98/"><![CDATA[<h1 id="wsl2-jekyll-세팅">WSL2 Jekyll 세팅</h1>

<h2 id="wsl2-ubuntu">WSL2 Ubuntu</h2>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04">Installation via Bash on Windows 10</a>를 확인해 보면 WSL 환경 설정 밥법이 나와있다.</p>

<p>WSL2 Ubuntu 20.04 LTS에서는 Ruby 2.7을 설치한다</p>

<p><a href="https://jekyllrb.com/docs/installation/windows/">Jekll on Windows</a></p>

<h2 id="ruby-사전준비">Ruby 사전준비</h2>

<p>레포지토리 목록 및 패키지를 업데이트</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update -y &amp;&amp; sudo apt-get upgrade -y
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo apt -y install make build-essential ruby ruby-dev
$ gem install jekyll bundler
</code></pre></div></div>

<h2 id="gem-update">gem update</h2>

<p>Ruby 설치후 github페이지 디렉토리로 이동해서 Ruby Gem 모듈을 추가 설치한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem update
</code></pre></div></div>
<p>실행 이후 나오는 오류 메시지에 따라 라이브러리를 추가 설치해 준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gem update
....생략
$ sudo apt install libxml2
$ sudo apt install libssl-dev
u sudo apt install zlib1g-dev  
</code></pre></div></div>

<blockquote>
  <p>gem update 이후 오류메시지가 없어 추가적인 라이브러리 설치는 진행하지 않았다.</p>
</blockquote>

<h2 id="bundle-update">bundle update</h2>

<p>실행하면 Gemfile정의된 모듈을 체크하고 없으면 오류 메세지를 보여준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ bundle update
....생략
$ gem install jekyll-gist
$ gem install jekyll-sitemap
$ gem install jekyll-paginate
% gem install nokogiri
$ gem install jemoji
</code></pre></div></div>

<blockquote>
  <p>bundle update 이후 오류메시지가 없어 추가적인 모듈 설치는 진행하지 않았다.</p>
</blockquote>

<h2 id="jekyll-버전-확인">Jekyll 버전 확인</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll -v
jekyll 4.2.2
</code></pre></div></div>

<h2 id="참고">참고</h2>

<p><a href="https://butteryoon.github.io/tools/2020/09/11/jekyll_wsl2.html">https://butteryoon.github.io/tools/2020/09/11/jekyll_wsl2.html</a>
<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04</a></p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Blog" /><category term="Jekyll" /></entry><entry><title type="html">WSL2 Ubuntu 설치</title><link href="http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="WSL2 Ubuntu 설치" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98/"><![CDATA[<h1 id="windows에-wsl2설치">Windows에 WSL2설치</h1>

<h2 id="windows에-버전-확인">Windows에 버전 확인</h2>

<p>Window에 WSL2를 설치할려면 20H1 이상 버전이어야 하기 때문에 Windows + S를 누른 후 PC정보를 검색하여 버전을 확인한다.</p>

<image src="https://user-images.githubusercontent.com/93482597/167349639-1fe45331-204a-47fe-826f-00f1fee12744.png"></image>
<image src="https://user-images.githubusercontent.com/93482597/167349815-2b78137e-969f-4853-843c-cfe8b7146eb7.png"> </image>

<p>버전이 낮다면 최신 버전으로 업데이트후에 진행하면 된다.</p>

<h2 id="dism으로-wsl-기능-활성화">DISM으로 WSL 기능 활성화</h2>

<p>Windows + S 키로 Windows Terminal 이나 PowerShell을 검색한후 관리자로 실행한다</p>

<p>DISM(배포 이미지 서비스 및 관리) 명령어로 Microsoft-Windows-Subsystem-Linux 기능을 활성화</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
</code></pre></div></div>

<p>DISM 명령어로 VirtualMachinePlatform 기능을 활성화 한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
</code></pre></div></div>

<p>이후 재부팅 한다.</p>

<h2 id="wsl2-설치">WSL2 설치</h2>

<p>아래 링크에서 WSL2를 설치</p>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/install#step-4---download-the-linux-kernel-update-package">WSL 설치 | Microsoft Docs</a>
<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">WSL2 Linux 커널 업데이트 패키지</a></p>

<p>터미널을 열고 WSL 버전을 2로 변경한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl --set-default-version 2
</code></pre></div></div>

<h2 id="ubuntu-설치">Ubuntu 설치</h2>

<p><a href="https://aka.ms/wslstore">Microsft Store</a>에서 Ubuntu 배포판을 설치</p>

<p>설치 이 후 우분투 사용자 이름과 패스워드를 지정한다.</p>

<p>이후 터미널에서</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl -l -v
</code></pre></div></div>
<p>를 입력하여 버전을 확인한다</p>

<h2 id="참고">참고</h2>
<p><a href="https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#windows-10%EC%97%90-wsl2-%EC%84%A4%EC%B9%98%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95">https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#windows-10%EC%97%90-wsl2-%EC%84%A4%EC%B9%98%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95</a>
<a href="https://psychoria.tistory.com/734">https://psychoria.tistory.com/734</a></p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Ubuntu" /></entry><entry><title type="html">WSL2 Git &amp;amp; VScode</title><link href="http://localhost:4000/wsl2/WSL2_git/" rel="alternate" type="text/html" title="WSL2 Git &amp;amp; VScode" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_git</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_git/"><![CDATA[<h1 id="git">Git</h1>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-git">WSL_git_docs</a> 참고</p>

<p>Ubuntu 터머널에서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install git
</code></pre></div></div>
<p>입력후 설치</p>

<p>혹은 <a href="https://git-scm.com/download/win">Windows Git</a>에서 설치</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
</code></pre></div></div>

<p>을 입력하여 네입과 이메일 입력 제대로 입력하지 않으면 잔디가 심어지지 않는다</p>

<h1 id="vscode">VScode</h1>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-vscode">WSL_VScode_docs</a> 참고</p>

<h2 id="ubuntu-업데이트">Ubuntu 업데이트</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h2 id="wget">Wget</h2>

<p>wget(웹 서버에서 콘텐츠를 검색하기 위해) 및 ca 인증서(SSL 기반 애플리케이션이 SSL 연결의 신뢰성을 확인할 수 있도록 허용)를 추가</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install wget ca-certificates
</code></pre></div></div>
<p>git clone한 repository에서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>code .
</code></pre></div></div>

<p>를 입력 하면 설치 후 VScode가 실행 된다</p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Blog" /><category term="Git" /><category term="VScode" /></entry><entry><title type="html">8.SQL응용 118~</title><link href="http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900/" rel="alternate" type="text/html" title="8.SQL응용 118~" /><published>2022-05-05T00:00:00+09:00</published><updated>2022-05-05T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900</id><content type="html" xml:base="http://localhost:4000/eip_ps/SQL%EC%9D%91%EC%9A%A900/"><![CDATA[<h1 id="118-sql---ddl">118. SQL - DDL</h1>
>>>>>>> 213e40fc2ada476a02eca7c01c338c4959a1af8a

<h2 id="ddldata-define-language-데이터-정의어">DDL(Data Define Language, 데이터 정의어)</h2>

<ul>
  <li>
    <p>DB를 구축하거나 수정할 목적</p>
  </li>
  <li>
    <p>DDL의 3가지 유형</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>명령어</th>
      <th>기능</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>CREATE</td>
      <td>SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의</td>
    </tr>
    <tr>
      <td>ALTER</td>
      <td>TABLE예 떄한 쩡의를 뼌꼉</td>
    </tr>
    <tr>
      <td>DROP</td>
      <td>SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 삭제</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>크알드</p>
</blockquote>

<h2 id="create-schema">CREATE SCHEMA</h2>

<ul>
  <li>
    <p>스키마를 정의하는 명령문</p>
  </li>
  <li>
    <p>표기 형식</p>
  </li>
</ul>

<pre><code class="language-SQL">CREATE SCHEMA 스키마명 AUTHORIZATION 사용자_id;
</code></pre>

<h2 id="create-domain">CREATE DOMAIN</h2>

<ul>
  <li>
    <p>도메인을 정의하는 명령문</p>
  </li>
  <li>
    <p>표기 형식</p>
  </li>
</ul>

<pre><code class="language-SQL">CREATE DOMAIN 도메인명 [AS] 데이터_타입
       [DEFAULT 기본값]
       [CONSTRAINT 제약조건명 CHECK (범위값)];
</code></pre>
<h2 id="create-table">CREATE TABLE</h2>

<ul>
  <li>
    <p>테이블을 정의하는 명령문</p>
  </li>
  <li>
    <p>표기 형식</p>
  </li>
</ul>

<pre><code class="language-SQL">CREATE TABLE 테이블 명
             (속성명 데이터_타입 [DEFAULT 기본값] [NOT NULL], ...)
             [, PRIMARY KEY(기본키_속성명, ...)]
             [. UNIQUE(대체키_속성명, ..)]
             [, FOREIGN KEY(외래키_속성명, ...)]
                    REFERENCES 참조테이블(기본키_속성명, ...)
                    [ON DELETE 옵션]
                    [ON UPDATE 옵션]
             [, CONSTRAINT  제약조건명] [CHECK (조건식)];
</code></pre>

<ul>
  <li>
    <p>PRIMARY KEY : 기본키로 사용할 속성을 지정</p>
  </li>
  <li>
    <p>UNIQUE : 대체키로 사용할 소겅을 지정, 중복된 값 가질수 없음</p>
  </li>
  <li>FOREIGN KEY ~ REFERENCES: 외래키로 사용할 속성을 지정
    <ul>
      <li>ON DELETE 옵션 : 참조 테이블의 튜플이 삭제되었을 때 기본 테이블에 취해야 할 사항을 지정</li>
      <li>ON UPDATE 옵션 : 참조 테이블의 참조 속성 값이 변경되었을 때 기본 테이블에 취해야 할 사항을 지정</li>
    </ul>
  </li>
  <li>CONSTRAINT : 제약 조건의 이름을 지정</li>
  <li>CHECK : 속성 값에 대한 제약 조건을 정의</li>
</ul>

<h2 id="create-view">CREATE VIEW</h2>

<ul>
  <li>
    <p>뷰(View)를 정의하는 명령문</p>
  </li>
  <li>
    <p>표기형식</p>
  </li>
</ul>

<pre><code class="language-SQL">CREATE VIEW 뷰명[(속성명[. 속성명, ...])]
AS SELECT문;
</code></pre>

<h2 id="create-index">CREATE INDEX</h2>

<ul>
  <li>
    <p>인덱스를 정의하는 명령문</p>
  </li>
  <li>
    <p>표기형식</p>
  </li>
</ul>

<pre><code class="language-SQL">CREATE[UNIQUE] INDEX 인덱스명
ON 테이블명(속성명 [ASC | DESC] [속성명 [ASC | DESC]])
[CLUSTER];
</code></pre>

<ul>
  <li>UNIQUE
    <ul>
      <li>사용된 경우 : 중복 값이 없는 속성으로 인덱스를 생성</li>
      <li>생략된 경우 : 중복 값을 허용하는 속성으로 인덱스를 생성</li>
    </ul>
  </li>
  <li>정렬 여부 지정
    <ul>
      <li>ASC : 오름차순 정렬</li>
      <li>DESC : 내림차순 정렬</li>
      <li>생략된 경우 : 오름차순으로 정렬됨</li>
    </ul>
  </li>
  <li>CLUSTER : 사용하면 인덱스가 클러스터드 인덱스로 설정됨</li>
</ul>

<h2 id="alter-table">ALTER TABLE</h2>

<ul>
  <li>
    <p>테이블에 대한 정의를 변경하는 명령문</p>
  </li>
  <li>
    <p>표기형식</p>
  </li>
</ul>

<pre><code class="language-SQL">ALTER TABLE 테이블명 ADD 속성명 데이터_타입 [DEFAULT '기본값'];
ALTER TABLE 테이블명 ALTER 속성명 [SET DEFAULT '기본값'];
ALTER TABLE 테이블명 DROP COLUMN 속성명 [CASCADE];

- ADD : 새로운 속성(열)을 추가할 때 사용
- ALTER : 특성 속성의 Default 값을 변경할 때 사용
- DROP COLUMN : 특성 속성을 삭제할 떄 사용
</code></pre>

<h2 id="drop">DROP</h2>

<ul>
  <li>
    <p>스키마, 도메인, 기본 테이블, 뷰 테이블, 인덱스, 제약 조건 등을 제거</p>
  </li>
  <li>
    <p>표기형식</p>
    <pre><code class="language-SQL">DROP SCHEMA 스키마명 [CASCADE | RESTRICT];
DROP DOMAIN 도메인명 [CASCADE | RESTRICT];
DROP TABLE 테이블명 [CASCADE | RESTRICT];
DROP VIEW 뷰명 [CASCADE | RESTRICT];
DROP INDEX 인덱스명 [CASCADE | RESTRICT];
DROP CONSTRAINT 제약조건명;
</code></pre>
  </li>
</ul>

<h1 id="119-sql---dcl">119. SQL - DCL</h1>

<h2 id="dcldata-control-language-데이터-제어어">DCL(Data Control Language, 데이터 제어어)</h2>

<ul>
  <li>
    <p>데이터의 보아느, 무결성, 회복, 병행 제어 등을 정의하는 데 사용하는 언어</p>
  </li>
  <li>
    <p>DCL의 종류</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>명령어</th>
      <th>기능</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>COMMIT</td>
      <td>명령에 의해 수행된 결과를 실제 물리적 디스크로 저장하고, 데이터베이스 조작 작업이 정상적으로 완료되었음을 관리자에게 알려줌</td>
    </tr>
    <tr>
      <td>ROLLBACK</td>
      <td>데이터베이스 조작 작업이 비정상적으로 종료되었을 때 원래의 상태로 복구함</td>
    </tr>
    <tr>
      <td>GRANT</td>
      <td>데이터베이스 사용자에게 사용 권한을 부여함</td>
    </tr>
    <tr>
      <td>REVOKE</td>
      <td>데이터베이스 사용자의 사용 권한을 취소함</td>
    </tr>
  </tbody>
</table>

<h2 id="grant--revoke">GRANT / REVOKE</h2>

<ul>
  <li>
    <p>데이터베이스 관리자가 데이터베이스 사용자에게 권한을 부여하거나 취소하기 위한 명령어</p>
  </li>
  <li>GRANT : 권한 부여를 위한 명령어</li>
  <li>REVOKE : 권한 취소를 위한 명령어</li>
  <li>사용등급 지정 및 해제</li>
</ul>

<pre><code class="language-SQL">- GRANT 사용자 등급 TO 사용자_ID_리스트 [IDENTIFIED BY 암호];
- REVOKE 사용자등급 FROM 사용자_ID_리스트;
</code></pre>

<ul>
  <li>테이블 및 속성에 대한 권한 부여 및 취소</li>
</ul>

<pre><code class="language-SQL">- GRANT 권한_리스트 ON 개체 TO 사용자 [WITH GRANT OPTION];
- REVOKE [GRANT OPTION FOR] 권한_리스트 ON 개체 FROM 사용자[CASCADE];
</code></pre>

<h2 id="commit">COMMIT</h2>

<ul>
  <li>트랜잭션이 수행한 내용을 데이터베이스에 반영하는 명령</li>
</ul>

<h2 id="rollback">ROLLBACK</h2>

<ul>
  <li>변경되었으나 아직 COMMIT되지 않은 모든 내용들을 취소하고 데이터베이스를 이전 상태로 되돌리는 명령어</li>
</ul>

<h2 id="savepoint">SAVEPOINT</h2>

<ul>
  <li>트랜잭션 내에 ROLLBACK 할 위치인 저장점을 지정하는 명령어</li>
</ul>

<h1 id="120-sql---dml">120. SQL - DML</h1>

<h2 id="dmldata-manipulation-language-데이터-조작어">DML(Data Manipulation Language, 데이터 조작어)</h2>

<ul>
  <li>
    <p>저장된 데이터를 실질적으로 관리하는데 사용되는 언어</p>
  </li>
  <li>
    <p>DML의 유형</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>명령문</th>
      <th>기능</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>SELECT</td>
      <td>테이블에서 튜플을 검색</td>
    </tr>
    <tr>
      <td>INSERT</td>
      <td>테이블에 새로운 튜플을 삽입</td>
    </tr>
    <tr>
      <td>DELETE</td>
      <td>테이블에서 튜블을 삭제</td>
    </tr>
    <tr>
      <td>UPDATE</td>
      <td>테이블에서 튜플의 내용을 갱신</td>
    </tr>
  </tbody>
</table>

<h2 id="삽입문insert-into">삽입문(INSERT INTO~)</h2>

<ul>
  <li>일반 형식</li>
</ul>

<pre><code class="language-SQL">INSERT INTO 테이블명([속성명1, 속성명2, ...])
VALUES (데이터1, 데이터2, ...);
</code></pre>

<h2 id="삭제문delete-from">삭제문(DELETE FROM~)</h2>

<ul>
  <li>일반 형식</li>
</ul>

<pre><code class="language-SQL">DELETE
FROM 테이블명
[WHERE 조건];
</code></pre>

<h2 id="갱신문update-set-">갱신문(UPDATE~ SET )</h2>

<p>일반 형식</p>

<pre><code class="language-SQL">UPDATE 테이블명
SET 속성명 = 데이터,[, 속성명=데이터, ...]
[WHERE 조건];
</code></pre>
<h1 id="121-dml---select--1">121. DML - SELECT -1</h1>

<h2 id="일반형식">일반형식</h2>

<pre><code class="language-SQL">SELECT [PREDICATE] [테이블명.]속성명 [AS 별칭][, [테이블명.]속성명, ...]
[, 그룹함수(속성명) [AS 별칭]]
[, Window함수 OVER (PARTITION BY 속성명1, 속성명2, ...
                ORDER BY 속성명3, 속성명4, ...)]
FROM 테이블명[, 테이블명...]
[WHERE 조건]
[GROUP BY 속성명, 속성명, ...]
[HAVING 조건]
[ORDER BY 속성명 [ASC | DESC]];
</code></pre>

<ul>
  <li>SELECT 절
    <ul>
      <li>PREDICATE : 검색할 튜플 수를 제한하는 명령어를 기술
  ▶ DISTINCT : 중복된 튜플이 있으면 그 중 첫 번째 한개만 표시함</li>
    </ul>
  </li>
  <li>속성명 : 검색하여 불러올 속성(열) 또는 속성을 이용한 수식을 지정함</li>
  <li>AS : 속성이나 연산의 이름을 다른 이름으로 표시하기 위해 사용</li>
  <li>FROM 절 : 검색할 데이터가 들어있는 테이블 이름을 기술</li>
  <li>WHERE절 : 검색할 조건을 기술</li>
  <li>ORDER BY절 : 데이터를 정렬하여 검색할 때 사용
    <ul>
      <li>속성명 : 정렬의 기준이 되는 속성명을 기술</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td>[ASC</td>
              <td>DESC] : 정렬 방식</td>
            </tr>
          </tbody>
        </table>
      </li>
    </ul>
  </li>
</ul>

<h2 id="조건-연산자">조건 연산자</h2>
<ul>
  <li>비교 연산자</li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>연산자</td>
      <td>=</td>
      <td>&lt;&gt;</td>
      <td>&gt;</td>
      <td>&lt;</td>
      <td>&gt;=</td>
      <td>&lt;=</td>
    </tr>
    <tr>
      <td>의미</td>
      <td>같다</td>
      <td>같지 않다</td>
      <td>크다</td>
      <td>작다</td>
      <td>크거나 같다</td>
      <td>작거나 같다</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>논리 연산자 : NOT, AND, OR</p>
  </li>
  <li>
    <p>LIKE 연산자 : 대표 문자를 이용해 지정된 속성의 값이 문자 패턴과 일치하는 튜플을 검색하기 위해 사용</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>대표문자</td>
      <td>%</td>
      <td>-</td>
      <td>#</td>
    </tr>
    <tr>
      <td>의미</td>
      <td>모든 문자를 대표</td>
      <td>문자 하나를 대표</td>
      <td>숫자 하나를 대표</td>
    </tr>
  </tbody>
</table>

<h2 id="기본-검색">기본 검색</h2>

<ul>
  <li>
    <p>SELECT 절에 원하는 속성을 지정하여 검색</p>
  </li>
  <li>
    <p>Ex</p>
  </li>
</ul>

<pre><code class="language-SQL">SELECT * FROM 사원;
SELECT 사원.*FROM 사원;
SELECT 이름, 부서, 생일, 주소, 기본급 FROM 사원;
SELECT 사원.이름, 사원.부서, 사원.생일, 사원.주소, 사원.기본급 FROM 사원;
</code></pre>

<blockquote>
  <p>DISTINCT 중복 제거</p>
</blockquote>

<h2 id="조건-지정-검색">조건 지정 검색</h2>

<ul>
  <li>
    <p>WHERE 절에 조건을 지정하여 조건에 만족하는 튜플만 검색</p>
  </li>
  <li>
    <p>Ex</p>
  </li>
</ul>

<pre><code class="language-SQL">SELECT *
FROM 사원
WHERE 부서 = '기획' AND 주소 = '대홍동';
</code></pre>

<pre><code class="language-SQL">SELECT *
FROM 사원
WHERE 이름 LIKE "김%";
</code></pre>

<pre><code class="language-SQL">SELECT *
FROM 사원
WHERE 새일 BETWEEN #01/01/69# AND #12/31/73#;
</code></pre>

<h2 id="정렬검색">정렬검색</h2>

<ul>
  <li>
    <p>ORDER BY 절에 특정 속성을 지정하여 지정된 속성으로 자료를 정렬하여 검색</p>
  </li>
  <li>
    <p>Ex</p>
  </li>
</ul>

<pre><code class="language-SQL">SELECT TOP 2 *
FROM 사원
ORDER BY 주소 DESC;
</code></pre>

<h2 id="하위-질의">하위 질의</h2>

<ul>
  <li>
    <p>하위 질의는 조건절에 주어진 질의를 먼저 수행하여 그 검색 결과를 조건절의 피연산자로 사용</p>
  </li>
  <li>
    <p>Ex</p>
  </li>
</ul>

<pre><code class="language-SQL">SELECT 부서
FROM 사원
WHERE EXISTS (SELECT 이름 FROM 여가활동 WHERE 여가활동.이름 = 사원.이름);
</code></pre>

<h2 id="복수-테이블">복수 테이블</h2>

<ul>
  <li>
    <p>여러 테이블을 대상으로 검색</p>
  </li>
  <li>
    <p>Ex</p>
  </li>
</ul>

<pre><code class="language-SQL">SELECT 사원.이름, 사원.부서, 여가활동.취미, 여가활동.경력
FROM 사원, 여가활동
WHERE 여가활동.경력 &gt;= 10 AND 사원.이름 = 여가활동.이름;
</code></pre>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry><entry><title type="html">노드 &amp;amp; API</title><link href="http://localhost:4000/blockchain_theory/Node&API/" rel="alternate" type="text/html" title="노드 &amp;amp; API" /><published>2022-05-03T00:00:00+09:00</published><updated>2022-05-03T00:00:00+09:00</updated><id>http://localhost:4000/blockchain_theory/Node&amp;API</id><content type="html" xml:base="http://localhost:4000/blockchain_theory/Node&amp;API/"><![CDATA[<h2 id="블록체인에서의-노드">블록체인에서의 노드</h2>

<p>전 세계적으로 존재하는 서버들을 노드(Node)라고 한다.
여기서 블록체인의 노드는 트리 구조로 구성되어 있다
기능과 필요에 따라 종류와 형태가 구별되며, 노드는 트랜잭션을 제안하고 검증을 할 수 있으며, 합의를 이루고, 블록체인을 보호하기 위해 채굴(Mining)을 수행</p>

<blockquote>
  <p>프라이빗 블록체인(Private blockchain) 또는 하이퍼레저 패브릭의 멤버쉽 서비스 같은 폐쇄형 블록체인 네트워크에서는 계정 역할의 노드(Node)가 꼭 필요하다.</p>
</blockquote>

<h2 id="노드의-종류">노드의 종류</h2>

<ul>
  <li>지갑(wallet)</li>
  <li>풀 노드(Full node)</li>
  <li>라이트 노드(Light node)</li>
  <li>SPV(Simple Payment Verification)</li>
  <li>마스터 노드(Master node)</li>
  <li>채굴 노드(Mining node)</li>
  <li>랜덤노드(Random node)</li>
  <li>엔드포인트 노드(Endpoint node) (구)레인저 노드(Ranger node)</li>
  <li>합의 노드(CN; Consensus nodes)</li>
  <li>슈퍼 노드(Super node) or 대표 노드(Representative node)</li>
  <li>히스토리 노드(History node)</li>
</ul>]]></content><author><name>Lee Kyuhwan</name></author><category term="Blockchain_theory" /><category term="Blockchain_theory" /></entry><entry><title type="html">암호화 &amp;amp; 합의 알고리즘</title><link href="http://localhost:4000/blockchain_theory/Encryption_consensus_algorithm/" rel="alternate" type="text/html" title="암호화 &amp;amp; 합의 알고리즘" /><published>2022-04-26T00:00:00+09:00</published><updated>2022-04-26T00:00:00+09:00</updated><id>http://localhost:4000/blockchain_theory/Encryption_consensus_algorithm</id><content type="html" xml:base="http://localhost:4000/blockchain_theory/Encryption_consensus_algorithm/"><![CDATA[<h1 id="암호화-기술과-보안">암호화 기술과 보안</h1>

<p>블록체인은 분산처리와 동시에 암호화 기술을 적용하여 높은 보안성을 확보한 기술이다. 보안성으로 인해 현재 금융업에서 다양한 분야에 빠르게 적용되고 있다</p>

<h1 id="블록체인-보안적-특징">블록체인 보안적 특징</h1>

<h3 id="기존-데이터베이스와-차이점">기존 데이터베이스와 차이점</h3>

<h3 id="무결성">무결성</h3>

<p>기존 데이터 베이스와 다르게 블록체인은 분산 시스템이기 때문에 각 노드들이 가지고 있는 사본을 통해 다른 노드에 문제가 발생해도 전체 블록체인 네트워크의 무결성은 보장된다.</p>

<h3 id="비가역성">비가역성</h3>

<p>블록체인 기술은 중앙 통제 방식이 아닌 분산 데이터 저장 방식시이 깨문에 단일 공격 지점이 없어 데이터 위변조 위험이 차단된다.</p>

<h2 id="보안적-특징">보안적 특징</h2>

<ol>
  <li>데이터 무결성
합의 알고리즘을 통해 데이터의 정확성과 일관성을 유지(무결성)</li>
  <li>거래 투명성
퍼블릭 블록체인의 경우 네트워크에 접속해 트랜잭션의 기록을 확인할 수 있다.</li>
  <li>감시 가능성
Hashing 기술을 통해 블록에 담겨 있는 트랙잭션이나 데이터는 수정할 수 없다. 만약 트랜잭션에 변경이 일어나면 머클 해시 값이 변경되어 위변조 시도를 바로 발견할 수 있다.</li>
</ol>

<h2 id="해시-함수">해시 함수</h2>

<p>해싱(Hashing)</p>]]></content><author><name>Lee Kyuhwan</name></author><category term="Blockchain_theory" /><category term="Blockchain_theory" /></entry><entry><title type="html">2.데이터 입출력 구현 31~40</title><link href="http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8400/" rel="alternate" type="text/html" title="2.데이터 입출력 구현 31~40" /><published>2022-04-25T00:00:00+09:00</published><updated>2022-04-25T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8400</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8400/"><![CDATA[<h1 id="31-데이터-전환">31. 데이터 전환</h1>

<h2 id="데이터-전환">데이터 전환</h2>

<ul>
  <li>현재 운영 중인 시스템의 데이터를 추출하고 이를 변환한 후 새로운 개발 시스템에서 사용할 수 있도록 적재하는 과정</li>
</ul>

<h2 id="데이터-전환-계획서">데이터 전환 계획서</h2>

<ul>
  <li>데이터 전환에 필요한 모든 계획을 기록하는 문서</li>
</ul>

<h1 id="32-데이터-검증">32. 데이터 검증</h1>

<h2 id="데이터-검증">데이터 검증</h2>

<ul>
  <li>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행 되었는지 여르를 확인하는 과정</li>
</ul>

<h2 id="검증-방법에-따른-분류">검증 방법에 따른 분류</h2>

<table>
  <thead>
    <tr>
      <th>검증 방법</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>로그검증</td>
      <td>데이터 전환 과정에서 작성하는 추출, 전환, 적재 로그를 검증</td>
    </tr>
    <tr>
      <td>기본 항목 검증</td>
      <td>로그 검증 외에 별도로 요청된 검증 항목에 대해 검증</td>
    </tr>
    <tr>
      <td>응용 프로그램 검증</td>
      <td>응용 프로그램을 통한 데이터 전환의 정합성을 검증</td>
    </tr>
    <tr>
      <td>응용 데이터 검증</td>
      <td>사전에 정의된 업무 규칙을 기준으로 데이터 전환의 정합성을 검증</td>
    </tr>
    <tr>
      <td>값 검증</td>
      <td>숫자 항목의 합계 검증, 코드 데이터의 범위 검증, 속성 변경에 따른 값 검증</td>
    </tr>
  </tbody>
</table>

<h1 id="33-오류-데이터-측정-및-정제">33. 오류 데이터 측정 및 정제</h1>

<blockquote>
  <p>오류상태, 데이터 정제 요청서, 데이터 정제보고서에 대해 학습</p>
</blockquote>

<h2 id="오류-데이터-측정-및-정제">오류 데이터 측정 및 정제</h2>

<ul>
  <li>고품질의 데이터를 운영 및 관리 하기 위해 수행</li>
</ul>

<table>
  <thead>
    <tr>
      <th>진행 과정</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>데이터 품질 분석</td>
      <td>오류 데이터를 찾기 위해 원천 및 목적 시스템 데이터의 정합성 여부를 확인하는 작업</td>
    </tr>
    <tr>
      <td>오류 데이터 측정</td>
      <td>데이터 품질 분석을 기반으로 정상 데이터와 오류 데이터의 수를 측정하여 오류 관리 목록을 작성</td>
    </tr>
    <tr>
      <td>오류 데이터 정제</td>
      <td>오류 관리 목록의 각 항목을 분석하여 원천 데이터를 정제하거나 전환 프로그램을 수정</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>위에서 아래 순으로 진행 (데오오)</p>
</blockquote>

<h2 id="오류-상태">오류 상태</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Open</td>
      <td>오류가 보고만 되고 분석되지 않은 상태</td>
    </tr>
    <tr>
      <td>Assigned</td>
      <td>오류의 영향 분석 및 수정을 위해 개발자에게 오류를 전달한 상태</td>
    </tr>
    <tr>
      <td>Fixed</td>
      <td>개발자가 오류를 수정한 상태</td>
    </tr>
    <tr>
      <td>Closed</td>
      <td>수정된 오류에 대해 테스트를 다시 했을 때 오류가 발견되지 않은 상태</td>
    </tr>
    <tr>
      <td>Deferred</td>
      <td>오류 수정을 연기한 상태</td>
    </tr>
    <tr>
      <td>Clarified/Classified</td>
      <td>보고된 오류를 관련자들이 확인 했을 때 오류가 아니라고 확인된 상태</td>
    </tr>
  </tbody>
</table>

<h2 id="데이터-정제요청서">데이터 정제요청서</h2>

<ul>
  <li>데이터 정제와 관련된 전반적인 내용을 문서로 작성한 것</li>
</ul>

<h2 id="데이터-정제보고서">데이터 정제보고서</h2>

<ul>
  <li>정제된 원천 데이터가 정상적으로 정제 되었는지 확인한 결과를 문서로 작성한 것</li>
</ul>

<h1 id="34-데이터베이스-개요">34. 데이터베이스 개요</h1>

<h2 id="데이터-저장소">데이터 저장소</h2>

<ul>
  <li>데이터들을 논리적인 구조로 조직화하거나, 물리적인 공간에 구축한 것을 의미</li>
</ul>

<h2 id="데이터베이스database">데이터베이스(Database)</h2>

<ul>
  <li>공동으로 사용될 데이터를 중복을 배제하여 통합하고, 저장장치에 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터</li>
</ul>

<h2 id="dbmsdatabase-management-system-데이터베이스-관리-시스템">DBMS(DataBase Management System; 데이터베이스 관리 시스템)</h2>

<ul>
  <li>
    <p>사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해주는 소프트웨어</p>
  </li>
  <li>
    <p>필수기능 3가지</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>정의(Definition</td>
      <td>데이터의 형(Type)과 구조에 대해한 저의, 이용방식, 제약 조건등을 명시하는 기능</td>
    </tr>
    <tr>
      <td>조작(Manipulation)</td>
      <td>데이터 검색, 갱신, 삽입, 삭제 등을 위해 인터페이스 수단을 제공하는 기능</td>
    </tr>
    <tr>
      <td>제어(Control)</td>
      <td>데이터의 무결성, 보안, 권한 검사, 병행 제어를 제공하는 기능</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>정조제</p>
</blockquote>

<h2 id="데이터의-독립성">데이터의 독립성</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>논리적 독립성</td>
      <td>응용 프로그램과 데이터베이스를 독립시킴으로써, 데이터의 논리적 구조를 변경시키더라도 응용 프로그램은 영향을 받지 않음</td>
    </tr>
    <tr>
      <td>물리적 독립성</td>
      <td>응용 프로그램과 보조기억장치 같은 물리적 장치를 독립시킴으로써, 디스크를 추가?변경하더라도 응용 프로그램은 영향을 받지 않음</td>
    </tr>
  </tbody>
</table>

<h2 id="스키마schema">스키마(Schema)</h2>
<ul>
  <li>데이터베이스의 구조와 제약조건에 관한 전반적인 명세를 기술한 것</li>
</ul>

<blockquote>
  <p>3계층 개념 명확히</p>
</blockquote>

<table>
  <thead>
    <tr>
      <th>종류</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>외부 스키마</td>
      <td>사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 것</td>
    </tr>
    <tr>
      <td>개념 스키마</td>
      <td>데이터베이스의 전체적인 논리적 구조</td>
    </tr>
    <tr>
      <td>내부 스키마</td>
      <td>물리적 저장장치의 입장에서 본 데이터베이스 구조</td>
    </tr>
  </tbody>
</table>

<h1 id="35-데이터베이스-설계">35. 데이터베이스 설계</h1>

<blockquote>
  <p>설계 순서와 각 단계별 특징 중요</p>
</blockquote>

<h2 id="데이터베이스-설계-순서">데이터베이스 설계 순서</h2>

<ol>
  <li>
    <p>요구 조건 분석 : 요구 조건 명세서 작성</p>
  </li>
  <li>
    <p>개념적 설계 : 개념 스키마, 트랜잭션 모델링, E-R 모델</p>
  </li>
  <li>
    <p>논리적 설계 : 목표 DBMS에 맞는 논리 스키마 설계, 트랜잭션 인터페이스 설계</p>
  </li>
  <li>
    <p>물리적 설계 : 목표 DBMS에 맞는 물리적 구조의 데이터로 변환</p>
  </li>
  <li>
    <p>구현 : 목표 DBMS의 DDL(데이터 정의어)로 데이터베이스 생성, 트랜잭션 작성</p>
  </li>
</ol>

<blockquote>
  <p>요개논물구</p>
</blockquote>

<h2 id="요구-조건-분석">요구 조건 분석</h2>

<ul>
  <li>데이터베이스가 필요한 용도를 파악 하는 것</li>
</ul>

<h2 id="개념적-설계정보-모델링-개념화">개념적 설계(정보 모델링, 개념화)</h2>

<ul>
  <li>현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정</li>
</ul>

<h2 id="논리적-설계데이터-모델링">논리적 설계(데이터 모델링)</h2>

<p>현실 세계에서 발생하는 자료를 특정 DBMS가 지원하는 논리적 자료 구조로 변환(mapping)시키는 과정</p>

<h2 id="물리적-설계데이터-구조화">물리적 설계(데이터 구조화)</h2>

<ul>
  <li>논리적 구조로 표현된 데이터를 물리적 구조의 데이터로 변환하는 과정</li>
</ul>

<h2 id="데이터베이스-구현">데이터베이스 구현</h2>

<ul>
  <li>논리적 설계와 물리적 설계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정</li>
</ul>

<h1 id="36-데이터-모델의-개념">36. 데이터 모델의 개념</h1>

<blockquote>
  <p>데이터 모델, 구성요소, 종류, 표시할 요소 등에 대한 개념 기억</p>
</blockquote>

<h2 id="데이터-모델">데이터 모델</h2>

<p>현실 세계의 정보들을 체계적으로 표현한 개념적 모형</p>

<h2 id="개념적-데이터-모델">개념적 데이터 모델</h2>

<ul>
  <li>현실 세계에 대한 인가느이 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정</li>
</ul>

<h2 id="논리적-데이터-모델">논리적 데이터 모델</h2>

<ul>
  <li>개념적 구조를 컴퓨터의 세계의 환경에 맞도록 변환하는 과정</li>
</ul>

<h2 id="데이터-모델에-표시할-요소">데이터 모델에 표시할 요소</h2>

<table>
  <thead>
    <tr>
      <th>요소</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>구조(Structure)</td>
      <td>논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질 표현</td>
    </tr>
    <tr>
      <td>연산(Operation)</td>
      <td>데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구</td>
    </tr>
    <tr>
      <td>제약 조건(Constraint)</td>
      <td>데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>구조, 연산, 제약 조건의 의미 기억 (구연제)</p>
</blockquote>

<h1 id="37-데이터-모델의-구성요소">37. 데이터 모델의 구성요소</h1>

<blockquote>
  <p>개속관 개념 숙지</p>
</blockquote>

<h2 id="개체entity">개체(Entity)</h2>

<ul>
  <li>데이터베이스에 표현하려는 개념이나 정보 단위 같은 현실 세계의 대상체</li>
</ul>

<h2 id="속성attribute">속성(Attribute)</h2>

<ul>
  <li>데이터베이스를 구성하는 가장 작은 논리적 단위</li>
</ul>

<h2 id="속성의-특성에-따른-분류">속성의 특성에 따른 분류</h2>

<table>
  <thead>
    <tr>
      <th>분류</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>기본 속성(Basic Attribute)</td>
      <td>업무 분석을 통해 정의한 속성<br />속성 중 가장 많고 일반적임</td>
    </tr>
    <tr>
      <td>설계 속성(Designed Attribute)</td>
      <td>원래 업무상 존재하지 않고 설계 과정에서 도출해내는 속성</td>
    </tr>
    <tr>
      <td>파생 속성(Derived Attribute)</td>
      <td>다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성</td>
    </tr>
  </tbody>
</table>

<h2 id="관계relationship">관계(Relationship)</h2>

<ul>
  <li>개체와 개체 사이의 논리적인 연결</li>
</ul>

<h2 id="관계의-형태">관계의 형태</h2>

<table>
  <thead>
    <tr>
      <th>형태</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>일 대 일(1:1)</td>
      <td>개체 집합 A의 각 원소가 개체 집합 B의 원소 한개와 대응하는 관계</td>
    </tr>
    <tr>
      <td>일 대 다(1:N)</td>
      <td>개체 집합A의 각 원소는 개체 집합 B의 원소 여러개와 대응하고 있지만, 개체 집합 B의 각 원소는 개체 집합 A의 원소 한 개와 대응하는 관계</td>
    </tr>
    <tr>
      <td>다 대 다(N:M)</td>
      <td>개체 집합 A의 원소는 개체 집합 B의 원소 여러개와 대응하고, 개체 집합 B의 각 원소도 개체 집합 A의 원소 여러개와 대응하는 관계</td>
    </tr>
  </tbody>
</table>

<h1 id="38-식별자identifier">38. 식별자(identifier)</h1>

<blockquote>
  <p>식별자의 종류, 특징 기억</p>
</blockquote>

<h2 id="식별자">식별자</h2>

<p>하나의 개체 내에서 인스턴스를 유일(Unique)하게 구분할 수 있는 구분자</p>

<h2 id="식별자의-분류">식별자의 분류</h2>

<table>
  <thead>
    <tr>
      <th>분류</th>
      <th>식별자</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>대표성 여부</td>
      <td>주 식별자(Primary Identifier) : 개체를 대표하는 유일한 식별자<br />보조 식별자(Alternate Identifier) : 주 식별자를 대신하여 개체를 식별할 수 있는 속성</td>
    </tr>
    <tr>
      <td>스스로 생성 여부</td>
      <td>내부 식별자(Internal Identifier) : 개체 내에서 스스로 만들어지는 식별자<br />외부 식별자(Foreign Identifier) : 다른 개체와의 관계(Relationship)에 의해 외부 개체의 식별자를 가져와 사용하는 식별자</td>
    </tr>
    <tr>
      <td>단일 속성 여부</td>
      <td>단일 식별자(Single Identifier) : 주 식별자가 한 가지 속성으로만 구성된 식별자<br />복합 식별자(Composit Identifier) : 주 식별자가 두개 이상의 속성으로 구성된 식별자</td>
    </tr>
    <tr>
      <td>대체 여부</td>
      <td>원조 식별자(Original Identifier) : 업무에 의해 만들어지는 가공되지 않은 원래의 식별자(본질 식별자)<br />대리 식별자(Surrogate Identifier) : 주 식별자의 속성이 두 개 이상인 경우 속성들을 하나의 속성으로 묶어 사용하는 식별자(인조 식별자)</td>
    </tr>
  </tbody>
</table>

<h2 id="후보-식별자">후보 식별자</h2>

<ul>
  <li>개체에서 각 인스턴스를 유일하게 식별할 수 있는 속성 또는 속성 집합</li>
</ul>

<h2 id="주-식별자의-특징">주 식별자의 특징</h2>

<table>
  <thead>
    <tr>
      <th>특징</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>유일성</td>
      <td>개체 내의 모든 인스턴스들은 주 식별자에 의해 유일하게 구분되어야 함</td>
    </tr>
    <tr>
      <td>최소성</td>
      <td>유일성을 만족시키기에 필요한 최소한의 속성으로만 구성되어야 함</td>
    </tr>
    <tr>
      <td>불변성</td>
      <td>주 식별자가 특정 개체에 한 번 지정되면 그 식별자는 변하지 않아야 함</td>
    </tr>
    <tr>
      <td>존재성</td>
      <td>주 식별자가 지정되면 식별자 속성에 반드시 데이터 값이 존재해야 함</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>유최불존</p>
</blockquote>

<h1 id="39-e-r개체-관계-모델">39. E-R(개체-관계) 모델</h1>

<blockquote>
  <p>개념과 특징 숙지</p>
</blockquote>

<h2 id="e-rentity-relationship-개체-관계-모델">E-R(Entity-Relationship, 개체-관계) 모델</h2>

<p>개체와 개체 간의 관계를 기본 요소로 이용하여 현실 세계의 무질서한 데이터를 개념적인 논리 데이터로 표현하기 위한 방법</p>

<h2 id="e-r-다이어그램">E-R 다이어그램</h2>

<table>
  <thead>
    <tr>
      <th>기호 이름</th>
      <th>의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>사각형</td>
      <td>개체(Entity) 타입</td>
    </tr>
    <tr>
      <td>마름모</td>
      <td>관계(Relationship) 타입</td>
    </tr>
    <tr>
      <td>타원</td>
      <td>속성(Attribute)</td>
    </tr>
    <tr>
      <td>이중 타원</td>
      <td>다중값 속성(복합 속성)</td>
    </tr>
    <tr>
      <td>밑줄 타원</td>
      <td>기본키 속성</td>
    </tr>
    <tr>
      <td>복수 타원</td>
      <td>복합 속성</td>
    </tr>
    <tr>
      <td>관계</td>
      <td>1:1, 1:N, N:M 등의 개체 간 관계에 대한 대응수를 선위에 기술</td>
    </tr>
    <tr>
      <td>선, 링크</td>
      <td>개체 타입과 속성을 연결</td>
    </tr>
  </tbody>
</table>

<h1 id="40-관계형-데이터베이스의-구조-관계형-데이터-모델">40. 관계형 데이터베이스의 구조/ 관계형 데이터 모델</h1>

<blockquote>
  <p>릴레이션을 구성하는 요소</p>
</blockquote>

<h2 id="관계형-데이터베이스">관계형 데이터베이스</h2>

<ul>
  <li>2차원적인 표(Table)을 이용해서 데이터 상호 관계를 정의하는 데이터 베이스</li>
</ul>

<h2 id="관계형-데이터베이스의-릴레이션-구조">관계형 데이터베이스의 릴레이션 구조</h2>

<image src="https://user-images.githubusercontent.com/93482597/166637476-087cfbe7-9a11-43d5-97d0-115ec157d2a6.png"></image>

<h2 id="튜플tuple">튜플(Tuple)</h2>

<ul>
  <li>릴레이션을 구성하는 각각의 행</li>
</ul>

<h2 id="속성attribute-1">속성(Attribute)</h2>

<ul>
  <li>데이터베이스를 구성하는 가장 작은 논리적 단위</li>
</ul>

<h2 id="도메인domain">도메인(Domain)</h2>

<ul>
  <li>하나의 애트리뷰트가 취할 수 있는 같은 타입의 원자(Atomic)값들의 집합</li>
</ul>

<h2 id="관계형-데이터-모델relational-data-model">관계형 데이터 모델(Relational Data Model)</h2>

<ul>
  <li>2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 DB구조</li>
</ul>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry><entry><title type="html">2.데이터 입출력 구현 41~50</title><link href="http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8401/" rel="alternate" type="text/html" title="2.데이터 입출력 구현 41~50" /><published>2022-04-25T00:00:00+09:00</published><updated>2022-04-25T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8401</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%8401/"><![CDATA[<h1 id="41-관계형-데이터베이스의-제약-조건---키key">41. 관계형 데이터베이스의 제약 조건 - 키(Key)</h1>

<blockquote>
  <p>키의 종류를 기억, 각 키에 대한 개념</p>
</blockquote>

<h2 id="키key">키(Key)</h2>

<ul>
  <li>
    <p>데이터베이스에서 조건에 만족하는 튜플을 찾거나 순서대로 정렬할 때 기준이 되는 속성</p>
  </li>
  <li>
    <p>키의 종류</p>
    <ul>
      <li>후보키(Candidate Key)</li>
      <li>기본키(Primary Key)</li>
      <li>대체키(Alternate Key)</li>
      <li>슈퍼키(Super Key)</li>
      <li>외래키(Foreign Key)</li>
    </ul>
  </li>
</ul>

<h2 id="후보키candidate-key">후보키(Candidate Key)</h2>

<ul>
  <li>속성들 중에서 튜플을 유일하게 식별하기 위해 사용되는 속성들의 부분집합</li>
  <li>유일성(Unique)과 최소성(Minimality)를 모두 만족해야 된다</li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>유일성(Unique)</td>
      <td>하나의 키 값으로 하나의 튜플만을 유일하게 식별할 수 있어야 함</td>
    </tr>
    <tr>
      <td>최소성(Minimality)</td>
      <td>키를 구성하는 속성 하나를 제거하면 유일하게 식별할 수 없도록 꼭 필요한 최소의 속성으로 구성되어야 함</td>
    </tr>
  </tbody>
</table>

<h2 id="기본키primary-key">기본키(Primary Key)</h2>

<ul>
  <li>후보키 중에서 특별이 선정된 주키(Main Key)</li>
</ul>

<h2 id="대체키alternate-key">대체키(Alternate Key)</h2>

<ul>
  <li>후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키</li>
</ul>

<h2 id="슈퍼키super-key">슈퍼키(Super Key)</h2>

<ul>
  <li>릴레이션 내에 있는 속성들의 집합으로 구성된 키</li>
</ul>

<h2 id="외래키foreign-key">외래키(Foreign Key)</h2>

<ul>
  <li>다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합</li>
</ul>

<h1 id="42-관계형-데이터베이스의-제약-조건---무결성integrity">42. 관계형 데이터베이스의 제약 조건 - 무결성(Integrity)</h1>

<h2 id="무결성integrity">무결성(Integrity)</h2>

<ul>
  <li>데이터베이스에 저장된 데이터 값과 현실 세계의 실제값이 일치하는 정확성</li>
</ul>

<h2 id="무결성의-종류">무결성의 종류</h2>

<blockquote>
  <p>개체 무결성과 참조 무결성 개념 숙지</p>
</blockquote>

<table>
  <thead>
    <tr>
      <th>종류</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>개체 무결성</td>
      <td>기본 테이블의 기본키를 구성하는 어떤 속성도 Null 값이나 중복값을 가질 수 없다는 규정</td>
    </tr>
    <tr>
      <td>참조 무결성</td>
      <td>외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야 함</td>
    </tr>
    <tr>
      <td>도메인 무결성</td>
      <td>주어진 속성 값이 정의된 도메인에 속한 값이어야 한다는 규정</td>
    </tr>
    <tr>
      <td>사용자 정의 무결성</td>
      <td>속성 값들이 사용자가 정의한 제약조건에 만족되어야 한다는 규정</td>
    </tr>
    <tr>
      <td>NULL 무결성</td>
      <td>릴레이션의 특정 속성 값이 NULL이 될 수 없도록 하는 규정</td>
    </tr>
    <tr>
      <td>고유 무결성</td>
      <td>릴레이션의 특정 속성에 대해 각 튜플이 갖는 속성값들이 서로 달라야 한다는 규정</td>
    </tr>
    <tr>
      <td>키 무결성</td>
      <td>하나의 릴레이션에는 적어도 하나의 키가 존재해야 한다는 규정</td>
    </tr>
    <tr>
      <td>관계 무결성</td>
      <td>릴레이션에 어느 한 튜플의 삽입 가능 여부 또는 한 릴레이션과 다른 릴레이션의 튜플들 사이의 관계에 대한 적절성 여부를 지정</td>
    </tr>
  </tbody>
</table>

<h2 id="데이터-무결성-강화">데이터 무결성 강화</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>애플리케이션</td>
      <td>데이터 생성, 수정, 삭제 시 무결성 조건을 검증하는 코드를 프로그램 내에 추가함</td>
    </tr>
    <tr>
      <td>데이터베이스 트리거</td>
      <td>트리거 이벤트에 무결성 조건을 실행하는 절차형 SQL을 추가함</td>
    </tr>
    <tr>
      <td>제약 조건</td>
      <td>데이터베이스에 제약 조건을 설정하여 무결성을 유지</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>애데제</p>
</blockquote>

<h1 id="43-관계대수-및-관계해석">43. 관계대수 및 관계해석</h1>

<h2 id="관계대수">관계대수</h2>

<ul>
  <li>원하는 정보와 그 정보를 검색하기 위해서 어떻게 유도하는가를 기술하는 절차적인 언어</li>
</ul>

<h2 id="순수-관계-연산자">순수 관계 연산자</h2>

<table>
  <thead>
    <tr>
      <th>종류</th>
      <th>특징</th>
      <th>기호</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Select</td>
      <td>릴레이션에 존재하는 튜플 중에서 선택 조건을 만족하는 튜플의 부분집합을 구하여 새로운 릴레이션을 만드는 연산</td>
      <td>σ(시그마)</td>
    </tr>
    <tr>
      <td>Project</td>
      <td>주어진 릴레이션에서 속성 리스트(Attribute List)에 제시된 속성 값만을 추출하여 새로운 릴레이션을 만드는 연산</td>
      <td>π(파이)</td>
    </tr>
    <tr>
      <td>Join</td>
      <td>공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산</td>
      <td>⋈</td>
    </tr>
    <tr>
      <td>Division</td>
      <td>X⊃Y인 두개의 릴레이션 R(X)와 S(Y)가 있을 때, R의 속성이 S의 속성값을 모두 가진 튜플에서 S가 가진 속성을 제외한 속성만을 구하는 연산</td>
      <td>÷</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>셀프조디</p>
</blockquote>

<h2 id="일반-집합-연산자">일반 집합 연산자</h2>

<ul>
  <li>수학적 집합 이론에서 사용하는 연산자</li>
</ul>

<table>
  <thead>
    <tr>
      <th>연산자</th>
      <th>기능 및 수학적 표현</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>합집합 UNION ∪</td>
      <td>두 릴레이션에 존재하는 튜플의 합집합을 구하되, 결과로 생성된 릴레이션에서 중복되는 튜블은 제거되는 연산</td>
    </tr>
    <tr>
      <td>교집합 INTERSECTION ∩</td>
      <td>두 릴레이션에 존재하는 튜플의 교집합을 구하는 연산</td>
    </tr>
    <tr>
      <td>차집합 DIFFERENCE －</td>
      <td>두 릴레이션에 존재하는 튜플의 차집합을 구하는 연산</td>
    </tr>
    <tr>
      <td>교차곱 CARTESIAn PRODUCT ×</td>
      <td>두 릴레이션에 있는 튜플들의 순서쌍을 구하는 연산</td>
    </tr>
  </tbody>
</table>

<h2 id="관계해석relational-calculus">관계해석(Relational Calculus)</h2>

<ul>
  <li>관계 데이터의 연산을 표현하는 방법</li>
</ul>

<<<<<<< HEAD
<h1 id="44-이상함수적-종속">44. 이상/함수적 종속</h1>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry><entry><title type="html">1.요구사항 확인 오답노트</title><link href="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B8_%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/" rel="alternate" type="text/html" title="1.요구사항 확인 오답노트" /><published>2022-04-23T00:00:00+09:00</published><updated>2022-04-23T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B8_%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B8_%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/"><![CDATA[<h1 id="문제">문제</h1>

<h2 id="1">1</h2>
<ul>
  <li>프로토타입 모형(Prototype Model)에 대해 간략히 서술</li>
</ul>

<h2 id="2">2</h2>
<ul>
  <li>소프트웨어 개발 방법론의 바탕이 되는 것으로, 소프트웨어를 개발하기 위한 설계, 운용, 유지보수 등의 과정을 단게별로 나눈것</li>
</ul>

<h2 id="3">3</h2>
<ul>
  <li>고객의 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하며 개발</li>
</ul>

<h2 id="4">4</h2>
<ul>
  <li>수시로 발생하는 고객의 요구사항에 유연하게 대응하기 위해 고객의 참여와 개발 과정의 반복을 극대화하여 개발 생산성을 향상시키는 모형</li>
  <li>의사소통(Communication), 단순성(Simplicity), 용기(Courage), 존중(Respect), 피드백(Feedback)을 핵심 가치로 삼는다</li>
</ul>

<h2 id="5">5</h2>

<ul>
  <li>xp 개발 방법론의 주요 실천 방법
    <ul>
      <li>개발에 참여하는 모든 구성원(고객 포함)들은 각자 자신의 역할이 있고 그 역할에 대한 책임을 가져야 한다.</li>
    </ul>
  </li>
</ul>

<h2 id="6">6</h2>
<ul>
  <li>현행 시스템을 파악하는 과정에서 수행하는 작업들의 그룹을 순서대로 나열</li>
  <li>A : 아키텍처 구성 파악, 소프트웨어 구성 파악</li>
  <li>B : 하드웨어 구성 파악, 네트워크 구성 파악</li>
  <li>C : 시스템 구성 현황 파악, 시스템 기능 파악, 시스템 인터페이스 현황 파악</li>
</ul>

<h1 id="정답">정답</h1>

<h2 id="1-1">1</h2>
<p>견본품을 만들어 최종 결과물을 예측하는 모형</p>

<h2 id="2-1">2</h2>
<p>소프트웨어 생명 주기</p>

<h2 id="3-1">3</h2>
<p>애자일(Agile)</p>

<h2 id="4-1">4</h2>
<p>XP(eXtreme Programming)</p>

<h2 id="5-1">5</h2>
<p>Whole Team(전체 팀)</p>

<h2 id="6-1">6</h2>
<p>C -&gt; A -&gt; B</p>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /><category term="정처기 오답노트" /></entry><entry><title type="html">1.요구사항 확인 21~30</title><link href="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B804/" rel="alternate" type="text/html" title="1.요구사항 확인 21~30" /><published>2022-04-22T00:00:00+09:00</published><updated>2022-04-22T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B804</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B804/"><![CDATA[<h1 id="21-sw-공학의-발전적-추세">21. S/W 공학의 발전적 추세</h1>

<h2 id="소프트웨어-재사용software-reuse">소프트웨어 재사용(Software Reuse)</h2>
<ul>
  <li>이미 개발되어 인정받은 소프트웨어를 다른 소프트웨어 개발이나 유지에 사용</li>
</ul>

<h3 id="소프트웨어-재사용-방법">소프트웨어 재사용 방법</h3>

<ul>
  <li>
    <p>합성 중심(Composition-Based) : 전자 칩과 같은 소프트웨어 부품, 즉 블록을 만들어서 끼워 맞춰 소프트웨어를 완성시키는 방법, 블록 구성 방법이라고도 함</p>
  </li>
  <li>
    <p>생성 중심(Generation-Based) : 추상화 형태로 써진 명세를 구체화하여 프로그램을 만드는 방법으로, 패턴 구성 방법이라고도 함</p>
  </li>
</ul>

<h2 id="소프트웨어-재공학software-reengineering">소프트웨어 재공학(Software Reengineering)</h2>
<ul>
  <li>기존 시스템을 이용하여 보다 나은 시스템을 구축하고, 새로운 기능을 추가하여 소프트웨어 성능을 향상 시키는 것</li>
</ul>

<h3 id="이점">이점</h3>
<ul>
  <li>소프트웨어의 품질 향상</li>
  <li>생산성 증가</li>
  <li>수명 연장</li>
  <li>오류 감소</li>
</ul>

<h2 id="casecomputer-aided-software-engineering">CASE(Computer Aided Software Engineering)</h2>

<ul>
  <li>소프트웨어 개발 과정에서 사용되는 요구분석, 설계, 구현, 검사 및 디버깅 과정 전체 또는 일부를 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화 하는 것</li>
</ul>

<h3 id="주요-기능">주요 기능</h3>
<ul>
  <li>소프트웨어 생명 주기 전 단계의 연결</li>
  <li>다양한 소프트웨어 개발 모형 지원</li>
  <li>그래픽 지원</li>
</ul>

<h1 id="22-비용-산정-기법">22. 비용 산정 기법</h1>

<h2 id="소프트웨어-비용-산정">소프트웨어 비용 산정</h2>

<ul>
  <li>소프트웨어 비용 산정은 개발에 소요되는 인원, 자원, 기간 등으로 소프트웨어의 규모를 확인하여 개발 계획 수립에 필요한 비용을 산정하는 것</li>
</ul>

<h2 id="소프트웨어-비용-결정-요소">소프트웨어 비용 결정 요소</h2>

<ul>
  <li>프로젝트 요소
    <ul>
      <li>제품 복잡도 : 소프트웨어의 종류에 따라 발생할 수 있는 문제점들의 난이도</li>
      <li>시스템 크기 : 소프트웨어의 규모에 따라 개발해야 할 시스템의 크기</li>
      <li>요구되는 신뢰도 : 일정 기간 내 주어진 조건하에서 프로그램이 필요한 기능을 수행하는 정도</li>
    </ul>
  </li>
  <li>자원 요소
    <ul>
      <li>인적 자원 : 소프트웨어 개발 관련자들이 갖춘 능력 혹은 자질</li>
      <li>하드웨어 자원 : 소프트웨어 개발 시 필요한 장비와 워드프로세서, 프린터 등의 보조 장비</li>
      <li>소프트웨어 자원 : 소프트웨어 개발 시 필요한 언어 분석기, 문서화 도구 등의 개발 지원 도구</li>
    </ul>
  </li>
  <li>생산성 요소
    <ul>
      <li>개발자 능력 : 개발자들이 각춘 전문지식, 경험, 이해도, 책임감, 창의력 등</li>
      <li>개발 기간 : 소프트웨어를 개발하는 기간</li>
    </ul>
  </li>
</ul>

<h1 id="23-비용산정-방법---하향식">23. 비용산정 방법 - 하향식</h1>

<h2 id="하향식-비용-산정-기법">하향식 비용 산정 기법</h2>

<ul>
  <li>
    <p>과거의 유사한 경험을 바탕으로 전문 지식이 많은 개발자들이 참여한 회으를 통해 비용을 산정하는 비과학적인 방법</p>
  </li>
  <li>
    <p>하향식 비용 산정 기법</p>
    <ul>
      <li>전문가 감정 기법</li>
      <li>델파이 기법</li>
    </ul>
  </li>
</ul>

<h2 id="전문가-감정-기법">전문가 감정 기법</h2>

<ul>
  <li>경험이 많은 두 명 이상의 전문가에게 비용 산정을 의로하는 기법</li>
</ul>

<h2 id="델파이-기법">델파이 기법</h2>

<ul>
  <li>전문가 감정 기법의 주관적인 편견을 보완하기 위해 많은 전문가의 의견을 종합하여 산정하는 기법</li>
</ul>

<h1 id="24--비용-산정-방식---상향식">24 . 비용 산정 방식 - 상향식</h1>

<ul>
  <li>세부적인 작업 단위별로 비용을 산정한 후 집계하여 전체 비용을 산정하는 방법</li>
  <li>주요 상향식 비용 산정 기법
    <ul>
      <li>LOC(원시 코드 라인 수) 기법</li>
      <li>개발 단계별 인월수 기법</li>
      <li>수학적 산정 기법</li>
    </ul>
  </li>
</ul>

<h2 id="loc원시-코드-라인수-source-line-of-code-기법">LOC(원시 코드 라인수, source LIne Of Code) 기법</h2>

<ul>
  <li>
    <p>각 기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측지를 구하고 이를 이용하여 비용을 산정하는 기법</p>
  </li>
  <li>예측치
    <ul>
      <li>(a+4m+b)/6</li>
      <li>a 낙관치, b : 비관치, m : 기대치(중간치)
        <h3 id="산정-공식">산정 공식</h3>
      </li>
    </ul>
  </li>
  <li>노력(인월) = 개발기간 X 투입인원 = LOC / 1인당 월평균 생산 코드 라인 수</li>
  <li>개발 비용 = 노력(인월) X 단위 비용(1인당 월평균 인건비)</li>
  <li>개발 기간 = 노력(인월) / 투입 인원</li>
  <li>생산성 = LOC / 노력(인월)</li>
</ul>

<h2 id="개발-단계별-인월수effort-per-task기법">개발 단계별 인월수(Effort Per Task)기법</h2>
<ul>
  <li>LOC 기법을 보완하기 위한 기법으로, 각 기능을 구현 시키는 데 필요한 노력을 생명 주기의 각 단계별로 산정</li>
</ul>

<h1 id="25-수학적-산정-기법">25. 수학적 산정 기법</h1>

<ul>
  <li>
    <p>상향식 비용 산정 기법으로, 경험적 추정 모형, 실험적 추적 모형이라고도 한다.</p>
  </li>
  <li>
    <p>주요 수학적 산정 기법</p>
    <ul>
      <li>COCOMO 모형</li>
      <li>Putnam 모형</li>
      <li>기능 점수(FP)모형</li>
    </ul>
  </li>
</ul>

<h2 id="cocomoconstructive-cost-model-모형">COCOMO(COnstructive COst MOdel) 모형</h2>

<ul>
  <li>LOC(원시 코드 라인 수)에 의한 비용 산정 기법</li>
  <li>보헴(Boehm)이 제안</li>
</ul>

<h2 id="cocomo의-소프트웨어-개발-유형">COCOMO의 소프트웨어 개발 유형</h2>

<table>
    <tr>
        <th>
            유형
        </th>
        <th>
            특징
        </th>
    </tr>
    <tr>
        <td>
            조직형(Organic Model)
        </td>
        <td>
            기관 내부에서 개발된 중, 소규모의 소프트웨어<br />5만(50KDSI) 라인 이하의 소프트웨어를 개발하는 유형
        </td>
    </tr>
    <tr>
        <td>
            반분리형(Semi-Detached Model)
        </td>
        <td>
            조직형과 내장형의 중간형 소프트웨어<br />30만(300KDSI) 라인 이하의 소프트웨어를 개발하는 유형
        </td>
    </tr>
    <tr>
        <td>
            내장형(Embedded Model)
        </td>
        <td>
            초대형 규모의 소프트웨어<br />30만(300KDSI) 라인 이상의 소프트웨어를 개발하는 유형
        </td>
    </tr>
</table>

<h2 id="cocomo-모형의-종류">COCOMO 모형의 종류</h2>

<table>
    <tr>
        <th>
        종류
        </th>
        <th>
        특징
        </th>
    </tr>
    <tr>
        <td>
        기본형(Basic) COCOMO
        </td>
        <td>
        소프트웨어의 크기와 개발 유형만을 이용하여 비용 산정
        </td>
    </tr>
    <tr>
        <td>
        중간형(Intermediate) COCOMO
        </td>
        <td>
        기본형 COCOMO의 공식을 토대로 사용하나, 다음 4가지 특성에 의해 비용을 산정<br />제품의 특성<br />컴퓨터의 특성<br />개발 요원의 특성<br />프로젝트 특성
        </td>
    </tr>
    <tr>
        <td>
        발전형(Detailed) COCOMO
        </td>
        <td>
        중간형 COCOMO를 보완하여 만들어진 모형<br />개발 공정별로 보다 자세하고 정확하게 노력을 산출하여 비용 산정
        </td>
    </tr>
</table>

<h2 id="putnam-모형">Putnam 모형</h2>

<ul>
  <li>소프트웨어 생명 주기의 전 과정 동안에 사용될 노력의 분포를 예상하는 모형</li>
  <li>푸트남(Putnam)이 제안, 생명 주기 예측 모형이라고도 함</li>
  <li>시간에 따른 함수로 표현되는 Rayleigh-Norden 곡선의 노력 분포도를 기초로 함</li>
</ul>

<h2 id="기능-점수fp-function-point-모형">기능 점수(FP; Function Point) 모형</h2>

<ul>
  <li>알브레히트(Albrecht)가 제안</li>
  <li>소프트웨어의 기능을 증대시키는 요인별로 기능점수(FP)를 구한 후 이를 이용해서 비용을 산정</li>
  <li>소프트웨어 기능 증대 요인
    <ul>
      <li>자료 입력(입력 양식)</li>
      <li>정보 출력(출력 보고서)</li>
      <li>명령어(사용자 질의수)</li>
      <li>데이터 파일</li>
      <li>필요한 외부 루틴과의 인터페이스</li>
    </ul>
  </li>
</ul>

<h2 id="비용산정-자동화-추정-도구">비용산정 자동화 추정 도구</h2>

<table>
    <tr>
        <td>
        SLIM
        </td>
        <td>
        Rayleigh-Norden 곡선과 Putnam 예측 모델을 기초로 하여 개발된 자동화 추정 도구
        </td>
    </tr>
    <tr>
        <td>
        ESTIMACS
        </td>
        <td>
        다양한 프로젝트와 개인별 요소를 수용하도록 FP 모형을 기초로 하여 개발된 자동화 추정 도구
        </td>
    </tr>
    
</table>

<h1 id="26--프로젝트-일정">26 . 프로젝트 일정</h1>

<h2 id="pertprogram-evaluation-and-review-technique-프로그램-평가-및-검토-기술">PERT(Program Evaluation and Review Technique, 프로그램 평가 및 검토 기술)</h2>

<ul>
  <li>프로젝트에 필요한 전체 작업의 상호 관계를 표시하는 네트워크</li>
  <li>각 작업별로 다음과 같이 단계를 나누어 종료시기를 결정
    <ul>
      <li>낙관적인 경우</li>
      <li>가능성이 있는 경우</li>
      <li>비관적인 경우</li>
    </ul>
  </li>
</ul>

<h2 id="cpmcritical-path-method-임계-경로-기법">CPM(Critical Path Method, 임계 경로 기법)</h2>

<ul>
  <li>작업을 나열하고 작업에 필요한 소요 기간을 예측하는데 사용하는 기법
    <blockquote>
      <p>그림에서 굵은 선이 임계 경로, 즉 최장 경로</p>
    </blockquote>
  </li>
</ul>

<h2 id="간트-차트">간트 차트</h2>

<ul>
  <li>프로젝트 작업 일정을 막대 도표를 이용하여 표시하는 프로젝트 일정표이다.</li>
  <li>시간선(Time-Line) 차트 라고도 한다.</li>
</ul>

<h1 id="27-소프트웨어-개발-방법론-결정">27. 소프트웨어 개발 방법론 결정</h1>

<ul>
  <li>프로젝트 관리와 재사용 현황을 소프트웨어 개발 방법론에 반영하고, 확정된 소프트웨어 생명 주기와 개발 방법론에 맞춰 소프트웨어 개발 단계, 활동, 작업, 절차 등을 정의하는 것</li>
</ul>

<h2 id="프로젝트-관리project-mangement">프로젝트 관리(Project Mangement)</h2>
<ul>
  <li>최소 비용으로 시스템을 개발하기 위한 전반적인 활동</li>
</ul>

<table>
    <tr>
        <th>
        관리 유형
        </th>
        <th>
        주요 내용
        </th>
    </tr>
    <tr>
        <td>
        일정 관리
        </td>
        <td>
        작업 순서, 작업 기간 산정, 일정 개발, 일정 통제
        </td>
    </tr>
    <tr>
        <td>
        비용 관리
        </td>
        <td>
        비용 산정, 지용 예산 편성, 비용 통제
        </td>
    </tr>
    <tr>
        <td>
        인력 관리
        </td>
        <td>
        프로젝트 팀 편성, 자원 산정, 프로젝트 조직 정의, 프로젝트 팀 개발, 자원 통제, 프로젝트 팀 관리
        </td>
    </tr>
    <tr>
        <td>
        위험 관리
        </td>
        <td>
        위험 식별, 위험 평가, 위험 대처, 위험 통제
        </td>
    </tr>
    <tr>
        <td>
        품질 관리
        </td>
        <td>
        품질 계획, 품질 보증 수행, 품질 통제 수행
        </td>
    </tr>
</table>

<h1 id="28-소프트웨어-개발-표준">28 소프트웨어 개발 표준</h1>

<ul>
  <li>소프트웨어 개발 단계에서 수행하는 품질 관리에 사용되는 국제 표준</li>
  <li>주요 소프트웨어 개발 표준
    <ul>
      <li>ISO/IEC 12207</li>
      <li>CMMI(능력 성숙도 통합 모델)</li>
      <li>SPICE(소프트웨어 처리 개선 및 능력 평가 기준)</li>
    </ul>
  </li>
</ul>

<h2 id="isoiec-12207">ISO/IEC 12207</h2>
<ul>
  <li>ISO(국제표준화기구)에서 만든 표준 소프트웨어 생명 주기 프로세스</li>
  <li>ISO/IEC 12207 구분</li>
</ul>

<table>
    <tr>
        <td>
        기본 생명 주기 프로세스
        </td>
        <td>
        획득, 공급, 개발, 운영, 유지보수 프로세스
        </td>
    </tr>
    <tr>
        <td>
        지원 생명 주기 프로세스
        </td>
        <td>
        품질 보증, 검증, 확인, 활동 검토, 감사, 문서화, 형상 관리, 문제 해결 프로세스
        </td>
    </tr>
    <tr>
        <td>
        조직 생명 주기 프로세스
        </td>
        <td>
        관리, 기반 구조, 훈련 프로세스
        </td>
    </tr>
</table>

<h2 id="cmmicapability-maturity-model-integration">CMMI(Capability Maturity Model Integration)</h2>
<ul>
  <li>소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도를 평가하는 모델</li>
  <li>
    <p>미국 카네기멜론 대학교의 소프트웨어 공학연구소(SEI)에서 개발</p>
  </li>
  <li>소프트웨어 성숙도</li>
</ul>

<table>
    <tr>
        <th>
         단계
        </th>
        <th>
        프로세스
        </th>
        <th>
        특징
        </th>
    </tr>
    <tr>
        <td>
         초기(Initial)
        </td>
        <td>
        정의된 프로세스 없음
        </td>
        <td>
        작업자 능력에 따라 성공 여부 결정
        </td>
    </tr>
    <tr>
        <td>
        관리(Managed)
        </td>
        <td>
        규칙화된 프로세스
        </td>
        <td>
        특정한 프로젝트 내의 프로세스 정의 및 수행
        </td>
    </tr>
    <tr>
        <td>
        정의(Defined)
        </td>
        <td>
        표준화된 프로세스
        </td>
        <td>
        조직의 표준 프로세스를 활용하여 업무 수행
        </td>
    </tr>
    <tr>
        <td>
        정량적 관리(Quantitatively Managed)
        </td>
        <td>
        예측 가능한 프로세스
        </td>
        <td>
        프로젝트를 정량적으로 관리 및 통제
        </td>
    </tr>
    <tr>
        <td>
        최적화(Optimizing)
        </td>
        <td>
        지속적 개선 프로세스
        </td>
        <td>
        프로세스 역량 향상을 위해 지속적인 프로세스 개선
        </td>
    </tr>
</table>

<h2 id="spicesoftware-process-improvement-and-capability-determination">SPICE(Software Process Improvement and Capability dEtermination)</h2>
<ul>
  <li>소프트웨어의 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준이다</li>
  <li>공식 명칭은 ISO/IEC 15504</li>
</ul>

<h2 id="spice의-프로세스-수행-능력-단계">SPICE의 프로세스 수행 능력 단계</h2>

<table>
    <tr>
        <th>
        단계
        </th>
        <th>
        특징
        </th>
    </tr>
    <tr>
        <td>
        불완전(Incomplete)
        </td>
        <td>
        프로세스가 구현되지 않았거나 목적을 달성하지 못한 단계
        </td>
    </tr>
    <tr>
        <td>
        수행(Performed)
        </td>
        <td>
        프로세스가 수행되고 목적이 달성된 단계
        </td>
    </tr>
    <tr>
        <td>
        관리(Manage)
        </td>
        <td>
        정의된 자원의 한도 내에서 그 프로세스가 작업 산출물을 인도하는 단계
        </td>
    </tr>
    <tr>
        <td>
        확립(Established)
        </td>
        <td>
        소프트웨어 공학 원칙에 기반하여 정의된 프로세스가 수행되는 단계
        </td>
    </tr>
    <tr>
        <td>
        예측(Predictable)
        </td>
        <td>
        프로세스가 목적 달성을 위해 통제되고, 양적인 측정을 통해서 일관되게 수행되는 단계
        </td>
    </tr>
    <tr>
        <td>
        최적화(Optimizing)
        </td>
        <td>
        프로세스 수행을 최적화하고, 지속적인 개선을 통해 업무 목적을 만족시키는 단계
        </td>
    </tr>
</table>

<h1 id="29-소프트웨어-개발-방법론-테일러링">29. 소프트웨어 개발 방법론 테일러링</h1>

<ul>
  <li>소프트웨어 개발 방법론의 절차, 사용기법 등을 수정 및 보완하는 작업</li>
  <li>소프트웨어 개발 방법론 테일러링 수행 절차
    <ul>
      <li>프로젝트 특징 정의 -&gt; 표준 프로세스 선정 및 검증 -&gt; 상위 수준의 커스터마이징 -&gt; 세부 커스터마이징 -&gt; 테일러링 문서화</li>
    </ul>
  </li>
</ul>

<h2 id="스프트웨어-개발-방법론-테일러링-고려사항">스프트웨어 개발 방법론 테일러링 고려사항</h2>

<table>
    <tr>
        <th>
        기준
        </th>
        <th>
        내용
        </th>
    </tr>
    <tr>
        <td>
        내부적 기준
        </td>
        <td>
        목표환경 : 시스템의 개발 환경과 유형이 서로 다른 경우 테일러링이 필요<br />
        요구사항 : 프로젝트의 생명 주기 활동에서 개발, 운영, 유지보수 등 프로젝트에서 우선적으로 고려할 요구사항이 서로 다른 경우 테일러링이 필요<br />
        프로젝트 규모 : 비용, 인력 기간 등 프로젝트의 규모가 서로 다른 경우 필요<br />
        보유 기술 : 프로세스, 개발 방법론, 산출물, 구성원의 능력 등이 서로 다른 경우 테일러링이 필요
        </td>
    </tr>
    <tr>
        <td>
        외부적 기준
        </td>
        <td>
        법적 제약사항 : 프로젝트별로 적용될 IT Compliance가 서로 다른 경우 필요<br />
        표준 품질 기준 : 금융, 제도 등 분야별 표준 품질 기준이 서로 다른 경우 필요
        </td>
    </tr>
</table>

<h1 id="30-소프트웨어-개발-프레임-워크">30. 소프트웨어 개발 프레임 워크</h1>

<ul>
  <li>
    <p>소프트웨어 개발에 공통적으로 사용되는 구성요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러가지 기능들을 제공해주는 반제품 형태의 소프트웨어 시스템</p>
  </li>
  <li>소프트웨어 개발 프레임워크의 주요 기능
    <ul>
      <li>예외처리</li>
      <li>트랜잭션 처리</li>
      <li>메모리 공유</li>
      <li>데이터 소스 관리</li>
      <li>서비스 관리</li>
      <li>쿼리 서비스</li>
      <li>로깅 서비스</li>
      <li>사용자 인증 서비스</li>
    </ul>
  </li>
  <li>소프트웨어 개발 프레임워크의 종류
    <ul>
      <li>스프링 프레임워크</li>
      <li>전자정부 프레임 워크</li>
      <li>닷넷 프레임워크</li>
    </ul>
  </li>
</ul>

<h2 id="스프링-프레임워크spring-framework">스프링 프레임워크(Spring Framework)</h2>

<ul>
  <li>자바 플랫폼을 위한 오픈 소스 경량형 애플리케이션 프레임 워크</li>
</ul>

<h2 id="전자정부-프레임워크">전자정부 프레임워크</h2>

<ul>
  <li>대한민국의 공공부문 정보화 사업 시 효율적인 정보 시스템의 구축을 지원하기 위해 필요한 기능 및 아키텍처를 제공하는 프레임 워크</li>
</ul>

<h2 id="닷넷-프렘워크net-framework">닷넷 프렘워크(.NET Framework)</h2>
<ul>
  <li>Windows 프로그램의 개발 및 실행 환결응 제공하는 프레임워크</li>
  <li>Microsoft 사에서 통합 인터넷 전략을 위해 개발</li>
</ul>

<h2 id="소프트웨어-개발-프레임워크의-특성">소프트웨어 개발 프레임워크의 특성</h2>

<table>
    <tr>
        <th>
        특성
        </th>
        <th>
        내용
        </th>
    </tr>
    <tr>
        <td>
        모듈화(Modularity)
        </td>
        <td>
        프레임워크는 캡슐화를 통해 모듈화를 강화하고 설계 및 구현의 변경에 따른 영향을 최소화함으로써 소프트웨어의 품질을 향상시킴<br />
        프레임워크는 개발 표준에 의한 모듈화로 인해 유지 보수가 용이
        </td>
    </tr>
    <tr>
        <td>
        재사용성(Reusability)
        </td>
        <td>
        프레임워크는 재사용 가능한 모듈들을 제공함으로써 예산 절감, 생산성 향상, 품질 보증이 가능함
        </td>
    </tr>
    <tr>
        <td>
        확장성(Extensibility)
        </td>
        <td>
        프레임워크는 다형성(Polymorphism)을 통한 인터페이스 확장이 가능하여 다양한 형태와 기능을 가진 애플리케이션 개발이 가능함
        </td>
    </tr>
    <tr>
        <td>
        제어의 역흐름(Inversion of Control)
        </td>
        <td>
        개발자가 관리하고 통제해야 하는 객체들의 제어를 프레임워크에 넘김으로써 생산성을 향상시킴
        </td>
    </tr>
</table>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry><entry><title type="html">1.요구사항 확인 16~20</title><link href="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B803/" rel="alternate" type="text/html" title="1.요구사항 확인 16~20" /><published>2022-04-19T00:00:00+09:00</published><updated>2022-04-21T00:00:00+09:00</updated><id>http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B803</id><content type="html" xml:base="http://localhost:4000/eip_ps/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%ED%99%95%EC%9D%B803/"><![CDATA[<h1 id="16-시퀀스sequence-다이어그램">16. 시퀀스(Sequence) 다이어그램</h1>

<h2 id="구성-요소">구성 요소</h2>

<ul>
  <li>액터(Actor) : 시스템으로부터 서비스를 요청하는 외부 요소로, 사람이나 외부 시스템을 의미</li>
  <li>객체(Object)  : 메시지를 주고받는 주체</li>
  <li>생명선(Lifeline) : 객체가 메모리에 존재하는 기간으로, 객체 아래쪽에 점선을 그어 표현// 객체 소멸이 표시된 기간까지 존재</li>
  <li>실행 상자(Active Box, 활성 상자) : 객체가 메시지를 주고 받으며 구동되고 있음을 표현</li>
  <li>메시지(Message) : 객체가 상호 작용을 위해 주고받는 메시지</li>
  <li>객체 소멸 : 해당 객체가 더이상 메모리에 존재하지 않음을 표현</li>
  <li>프레임(Frame) : 다이어그램의 전체 또는 일부를 묶어 표현</li>
</ul>

<h2 id="특징">특징</h2>

<ul>
  <li>시스텡이나 객체들이 메시지를 주고받으며 상호 작용하는 과정을 그림으로 표현</li>
</ul>

<h1 id="17-커뮤니케이션communication-다이어그램">17. 커뮤니케이션(Communication) 다이어그램</h1>

<h2 id="특징-1">특징</h2>

<ul>
  <li>시스템이나 객체들이 메시지를 주고 받으며 시간의 흐름에 따라 상호 작용하는 과정을 액터, 객체, 링크, 메시지 등의 요소를 사용하여 그림으로 표현</li>
  <li>동작에 참여하는 객체들 사이의 간계를 파악하는데 사용</li>
</ul>

<h2 id="구성-요소-1">구성 요소</h2>
<ul>
  <li>액터(ACtor) : 시스템으로부터 서비스를 요청하는 외부 요소로, 사람이나 외부 시스템을 의미</li>
  <li>객체(Object) : 메시지를 주고받는 주체</li>
  <li>링크(Link) : 객체들 간의 관계를 표현한 것 // 액터와 객체, 객체와 객체 간에 실선을 그어 표현</li>
  <li>메시지(Message) : 객체가 상호 작용을 위해 주고받는 내용 //  화살표의 방향은 메시지를 받는 쪽으로 향하게 표현 // 일정한 순서에 의해 처리되는 메시지의 경우 숫자로 순서를 표시</li>
</ul>

<h1 id="18-상태state-다이어그램">18. 상태(State) 다이어그램</h1>

<h2 id="특징-2">특징</h2>
<ul>
  <li>객체들 사이에 발생하는 이벤트에 의한 객체들의 상태 변화를 그림으로 표현</li>
  <li>객체의 상태란 객체가 갖는 속성 값의 변화를 의미</li>
  <li>특정 객체가 어떤 이벤트에 의해 상태 변환 과정이 진행되는지 확인</li>
</ul>

<h1 id="19-패키지package-다이어그램">19. 패키지(Package) 다이어그램</h1>

<h2 id="특징-3">특징</h2>
<ul>
  <li>요소들을 그룹화한 패키지간의 의존 관계를 표현</li>
  <li>패키지는 또 다른 패키지의 요소가 될 수 있다.</li>
  <li>대규모 시스템에서 주요 요소 간의 종속성을 파악하는데 사용</li>
</ul>

<h1 id="20-소프트웨어-개발-방법론">20 소프트웨어 개발 방법론</h1>

<h2 id="컴포넌트-기반cbd-component-based-design-방법론">컴포넌트 기반(CBD; Component Based Design) 방법론</h2>

<ul>
  <li>
    <p>기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론</p>
  </li>
  <li>
    <p>특징</p>
    <ul>
      <li>개발 기간 단축으로 인한 생산성 향상</li>
      <li>새로운 기능 추가가 쉬운 확장성</li>
      <li>소프트웨어 재사용이 가능</li>
    </ul>
  </li>
</ul>

<h2 id="구조적-방법론">구조적 방법론</h2>

<ul>
  <li>
    <p>사용자 요구사항을 파악하요 문서화하는 처리(Process) 중심의 방법론</p>
  </li>
  <li>
    <p>구조적 방법론의 개발 절차</p>
    <ul>
      <li>타당성 검토 단계 -&gt; 계획 단계 -&gt; 요구사항 단계 -&gt; 설계 단계 -&gt; 구현 단계 -&gt; 시험 단계 -&gt; 운용/유지보수 단계</li>
    </ul>
  </li>
</ul>

<h2 id="정보공학-방법론">정보공학 방법론</h2>

<ul>
  <li>
    <p>계획, 분석, 설계, 구축에 정형화된 기법들을 상호 연관성 있게 통합 및 적용하는 자료(Data) 중심의 방법론</p>
  </li>
  <li>
    <p>개발절차</p>
    <ul>
      <li>정보 전략 계획 수립 단계 -&gt; 업무 영역 분석 단계 -&gt; 업무 시스템 설계 단계 -&gt; 업무 시스템 구축 단계</li>
    </ul>
  </li>
</ul>

<h2 id="객체-지향-방법론">객체 지향 방법론</h2>

<ul>
  <li>
    <p>객체들을 조립해서 필요한 소프트웨어를 구현하는 방법론</p>
  </li>
  <li>
    <p>개발 절차</p>
    <ul>
      <li>요구 분석 단계 -&gt; 설계 단계 -&gt; 구현 단계 -&gt; 테스트 및 검증 단계 -&gt; 인도 단계</li>
    </ul>
  </li>
</ul>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry></feed>
=======
<h1 id="44-이상함수적-종속">44. 이상/함수적 종속</h1>]]></content><author><name>Lee Kyuhwan</name></author><category term="EIP_PS" /><category term="EIP_PS" /></entry></feed>
>>>>>>> 213e40fc2ada476a02eca7c01c338c4959a1af8a
