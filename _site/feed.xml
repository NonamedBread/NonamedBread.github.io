<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-26T18:59:51+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">NonamedBread</title><subtitle>An amazing website.</subtitle><author><name>Lee Kyuhwan</name></author><entry><title type="html">내장함수로 배열 최솟값, 최댓값</title><link href="http://localhost:4000/algorithm/Math.min/" rel="alternate" type="text/html" title="내장함수로 배열 최솟값, 최댓값" /><published>2022-05-20T00:00:00+09:00</published><updated>2022-05-20T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/Math.min</id><content type="html" xml:base="http://localhost:4000/algorithm/Math.min/"><![CDATA[<h1 id="mathmin">Math.min</h1>

<ul>
  <li>인자로 넘겨줘야지 객체로 넘겨주면 안됨 …같은 정계 연산자를 사용해야 된다 arr[0], arr[1] , … arr[6]이런 식으로 펼쳐줌</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">){</span>
    <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(...</span><span class="nx">arr</span><span class="p">);</span> <span class="c1">// </span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(...</span><span class="nx">arr</span><span class="p">));</span>
        <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">{</span><span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">11</span><span class="p">};</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">));</span>
</code></pre></div></div>

<h1 id="mathminapply">Math.min.apply</h1>

<ul>
  <li>첫번째 인자로 객체(this) 두번째 인자로 배열을 넘긴다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">){</span>
    <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">aply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">arr</span><span class="p">);</span> <span class="c1">// </span>
        <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">{</span><span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">11</span><span class="p">};</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">));</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">암호화폐의 기초</title><link href="http://localhost:4000/blockchain_theory/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8%EA%B3%BC%EA%B8%B0%EC%B4%88/" rel="alternate" type="text/html" title="암호화폐의 기초" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/blockchain_theory/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8%EA%B3%BC%EA%B8%B0%EC%B4%88</id><content type="html" xml:base="http://localhost:4000/blockchain_theory/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8%EA%B3%BC%EA%B8%B0%EC%B4%88/"><![CDATA[<h1 id="암호화폐의-화페적-기능">암호화폐의 화페적 기능</h1>

<p>화폐의 기능을 하기 위해서는 교환의 매개체, 가치척도의 기능, 가치 저장의 기능이 있어야 한다 그렇다면 암호화폐는 화페의 기능을 충족 하는가?? 비트코인으로 예를 들자면 엘살바도르에서 법정화폐로 쓰이거나 채굴을 통해 불안정하지만 기능을 한다고 생각한다 이러한 불안정한 암호화폐의 기능을 보안하기 위한 다양한 알트코인들이 다수 등장하고 있다.</p>

<h1 id="자료구조로써의-블록체인">자료구조로써의 블록체인</h1>

<p>블록체인의 핵심은 인터넷상에 있는 사람들과 동일한 데이터를 가지는 것이라고 한다. 이러한 블록체인의 특징으로는 크게 3가지가 있다.</p>
<ul>
  <li>누구나 데이터를 추가할 수 있다.</li>
  <li>데이터는 한 번 추가하면, 수정하거나 삭제가 불가능</li>
  <li>중앙화되지 않고 블록체인 네트워크에 있는 모든 사람들이 함께 관리</li>
</ul>

<h1 id="블록block-체인chain이란">블록(Block), 체인(Chain)이란?</h1>

<h2 id="블록block">블록(Block)</h2>
<p>블록은 데이터를 저장하는 공간이다. 자산에 대한 정보, 개인 정보등을 암호화헤 담는 등 다양한 유형의 정보를 담을 수 있다.</p>

<ul>
  <li>비트코인은 거래 기록을 블록에 저장한다. 블록체인에서는 이 거래 기록을 “트랜잭션”이라고 한다.</li>
</ul>

<h2 id="체인chain">체인(Chain)</h2>
<p>블록 하나에 모든 거래 기록을 담는다면 블록의 크기가 너무 커지기 때문에 블록체인 네트워크에 참여한 사용자가 하나의 블록에 일정한 갯수의 트랜잭션을 넣어 네트워크를 공유하게 된다. 그리고 새로운 블록에는 이전 블록을 지칭하는 데이터를 함께 넣어 이전 블록을 가리키는데 이러한 모양을 체인처럼 생격다고 하여 블록체인이라고 부른다.</p>

<h1 id="블록생성">블록생성</h1>

<p>새로운 트랜잭션이 생기면 블록체인에서 다양한 검증 절차를 수행하게 된다. 유효성 검사가 끝난 후에는 트랜잭션이 블록에 담기고 해당 블록이 체인에 추가 된다. 즉 채굴(Mining)이란 트랜잭션을 모아서 하나의 블록으로 만드는 과정이다.</p>

<h1 id="분산원장과-블록체인">분산원장과 블록체인</h1>

<p>원장은 거래 내역의 집합이며, 블록체인은 원장을 저장하는 데이터베이스 유형중 하나이다. 중앙 집중식 데이터베이스와 달리 분산 원장(distributed ledger)은 분산되어 있으며, 데이터를 여러 위치에 두거나, 여러 사용자들이 나눠서 가지고 있는 데이터베이스 유형이다. 블록체인은 특정 기술들이 추가된 분산 원장의 한 종류라고 할 수 있다.</p>

<h2 id="분산원장과-블록체인의-차이점">분산원장과 블록체인의 차이점</h2>

<ol>
  <li>블록 구조
블록체인은 일반적으로 블록 형태로 데이터가 저장된다.</li>
  <li>순서
블록체인 기술은 모든 블록이 직전 블록을 가리키며 순서대로 배열되어 있다.</li>
  <li>블록체인 메커니즘
블록체인에서는 블록을 생성할 노드를 정하기 위해 Pow, PoS와 같은 메커니즘을 사용한다.</li>
  <li>토큰
블록체인에서는 블록을 생성하기 위해 자원을 소모한 노드에게 보상을 주기 위해 코인을 제공한다.</li>
</ol>

<h1 id="분산원장기술dlt-distributed-ledger-technology">분산원장기술(DLT; Distributed ledger technology)</h1>

<p>분산원장(distributed ledger)은 거래 정보를 기록한 원장을 분산화된 네트워크에 참여한 차염자들이 공동으로 기록 및 관리하는 기술</p>

<h2 id="중앙집중원장centralized-ledger의-취약점">중앙집중원장(Centralized ledger)의 취약점</h2>

<ol>
  <li>비용문제 : 제3자인 중앙집중형 관리시스템은 거래자들 사이에서 과도한 관리, 중개수수료를 청구하는 경우</li>
  <li>시간문제 : 은행의 경우 은행들의 데이터베이스를 통해 거래를 확인하고 청산하기까지 중앙은행과 금융결제원 등 많은 중간다리가 포함되어 있다. 외환거래의 경우 3일 정도 더 걸리는 경우도 있다.</li>
  <li>보안문제 : 중앙집중형 데이터베이스를 이용하게 되면 해커들의 공격대상은 하나로 집중되게 된다.</li>
</ol>

<h2 id="분산원장기술의-장점">분산원장기술의 장점</h2>

<ol>
  <li>인증과 증명의 효율성</li>
  <li>시스템 안정성</li>
  <li>보안성</li>
  <li>투명성</li>
</ol>

<h1 id="요약">요약</h1>

<p>블록체인이란 분산원장의 한 종류 이며 트랜잭션을 저장하는 블록과 블록끼리 연결하는 체인이 있다. 이러한 기술 덕분에 인증과 증명의 효율성, 시스템 안정성, 보안성, 투명성등의 장점이 있다.</p>]]></content><author><name>Lee Kyuhwan</name></author><category term="Blockchain_theory" /><category term="Blockchain_theory" /></entry><entry><title type="html">연필 개수</title><link href="http://localhost:4000/algorithm/%EC%97%B0%ED%95%84-%EA%B0%9C%EC%88%98/" rel="alternate" type="text/html" title="연필 개수" /><published>2022-05-16T00:00:00+09:00</published><updated>2022-05-16T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%97%B0%ED%95%84%20%EA%B0%9C%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%97%B0%ED%95%84-%EA%B0%9C%EC%88%98/"><![CDATA[<ul>
  <li>
    <p>연필 1다스는 12자루 학생 1인당 1자루씩 나누어 준다고 할때 필요한 다스 수</p>
  </li>
  <li>Math.floor() : 소수점 이하를 버림</li>
  <li>Math.ceil() : 소수점 이하를 올림</li>
  <li>Math.round() : 소수점 이하를 반올림</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span>
                <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">12</span><span class="p">);</span>
                
                <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
            <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">최솟값 구하기</title><link href="http://localhost:4000/algorithm/%EC%B5%9C%EC%86%9F%EA%B0%92_%EA%B5%AC%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="최솟값 구하기" /><published>2022-05-16T00:00:00+09:00</published><updated>2022-05-16T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%B5%9C%EC%86%9F%EA%B0%92_%EA%B5%AC%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%B5%9C%EC%86%9F%EA%B0%92_%EA%B5%AC%ED%95%98%EA%B8%B0/"><![CDATA[<ul>
  <li>
    <p>7개의 수가 주어지면 그 숫자 중 가장 작은 수</p>
  </li>
  <li>
    <p>자바스크립트에는 수의 최대 한도 이상으로 값을 저장해 값이 손실되는 것을 방지하기 위해서 두가지의 상수가 존재한다. 첫번째는 MAX_SAFE_INTEGER이고, 두번째로는 MAX_VALUE</p>
    <ul>
      <li>MAX_SAFE_INTEGER : 더 큰 수를 변수에 집어 넣어도 저장은 되지만 정확하게 보관할 수 없다</li>
      <li>integer : 값의 실제 한도를 나타낸다. 그 한도를 넘으면 값이 완전히 파손되거나 Infinity로 취급되 버린다.</li>
    </ul>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">let</span> <span class="nx">answer</span><span class="p">,</span> <span class="nx">min</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">.</span><span class="nx">MAX_SAFE_INTEGER</span><span class="p">;</span> <span class="c1">// min = arr[0]</span>
            
            <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="nx">min</span><span class="p">)</span> <span class="nx">min</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
            <span class="p">}</span>

            <span class="nx">answer</span> <span class="o">=</span> <span class="nx">min</span><span class="p">;</span>
            <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">Blockchain Explorer</title><link href="http://localhost:4000/project/blockchainExplorer00/" rel="alternate" type="text/html" title="Blockchain Explorer" /><published>2022-05-15T00:00:00+09:00</published><updated>2022-05-15T00:00:00+09:00</updated><id>http://localhost:4000/project/blockchainExplorer00</id><content type="html" xml:base="http://localhost:4000/project/blockchainExplorer00/"><![CDATA[<h1 id="결과">결과</h1>

<h2 id="시연영상">시연영상</h2>
<image src="https://user-images.githubusercontent.com/93482597/168478733-f6457155-2107-4a45-900b-fe63be2df64f.gif" />

<h2 id="깃헙">깃헙</h2>

<p><a href="https://github.com/NonamedBread/BTC2nd-04">https://github.com/NonamedBread/BTC2nd-04</a></p>

<h1 id="etherscan">Etherscan</h1>

<image src="https://user-images.githubusercontent.com/93482597/170171146-2d8e5e4f-cc79-49d5-b992-9a7f5142beac.png" />

<p>이번 프로젝트는 이더스캔이라는 이더리움 익스플로러를 벤치마킹 하여 진행하는 웹 프로젝트 이다.</p>

<h2 id="what-is-etherscan">What is Etherscan?</h2>

<p>이더리움 블록체인에서 일어나고 있는 모든 활동과 정보를 쉽게 검색할 수 있는 사이트이다. 이더스캔에서는 이더리움의 블록 생성 내역, 트랜잭션 조회, 지갑 정보 조회 등 블록체인에서 일어나고 있는 모든 활동과 정보를 쉽게 검색할 수 있다.</p>

<h1 id="ye-seulis-explorer-프로젝트-소개">Ye Seuli`s Explorer 프로젝트 소개</h1>

<h2 id="main-page">Main page</h2>

<image src="https://user-images.githubusercontent.com/93482597/170177010-e23144de-cd1b-4f72-8a88-cfb3f6a1789c.png" />

<pre><code class="language-Javascript">function App() {

  return (
    &lt;BrowserRouter&gt;
      &lt;Header /&gt;  // 헤더 컴포넌트
      &lt;Routes &gt;
        &lt;Route path="/" element={&lt;Front/&gt;} /&gt;  // 메인화면
        &lt;Route path="/getBlock" element={&lt;Getblock/&gt;}/&gt;  // 블럭정보
        &lt;Route path="/getTransaction" element={&lt;GetTransaction/&gt;}/&gt;  // 트랜잭션 정보
        &lt;Route path="/address" element={&lt;Address/&gt;}/&gt; // 지갑주소 검색
        &lt;Route path="/blockHash" element={&lt;BlockHash/&gt;}/&gt;  // 블록 해쉬 검색
        &lt;Route path="/transactionHash" element={&lt;TransactionHash/&gt;}/&gt; // 트랜잭션 해쉬 검색
      &lt;/Routes&gt;
    &lt;/BrowserRouter&gt;
  );
}
</code></pre>

<blockquote>
  <p>컴포넌트 구성</p>
</blockquote>

<p>메인페이지 화면 구성은 헤더부분과 검색창과 최신 정보를 보여주는 두개의 컴포넌트로 구성하였다 여기서 검색창, 최신 블록정보와 트랜잭션을 확인하는 컴포넌트를 각각 구성하여 하나의 컴포넌트로 구성하였다.</p>

<pre><code class="language-Javascript">function Front(){

    return(
      &lt;&gt;
      &lt;Searchbar/&gt;  // 서치바 컴포넌트
        &lt;div className='front-container'&gt;
          &lt;div className='container'&gt;
              &lt;Block /&gt;  //LatestBlock 컴포넌트
          &lt;/div&gt;
          &lt;div className='container'&gt;
              &lt;Transaction/&gt;  // LatestTransaction 컴포넌트
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/&gt;
    )
}

export default Front;
</code></pre>
<blockquote>
  <p>메인페이지 구성</p>
</blockquote>

<h3 id="latest-page">Latest page</h3>

<p>Latest 페이지는 이더리움 블록체인에서 일어나고 있는 최신 정보를 확인할 수 있는 페이지 이다. Axios를 사용하여 API와 통신하였으며 useState를 사용하여 객체에 저장한 다음 map을 이용하여 JSON 데이터를 UI상에서 보여주었다.
또한 블록넘버와 트랙잭션 해쉬를 클릭하면 해당 정보를 상세정보를 확인할 수 있도록 Link를 사용하였다.</p>

<blockquote>
  <p>Latest Tx 페이지 구현을 하는 도중에 slice 오류가 나서 문제를 핸들링 하는데 시간이 오래 거렸는데 API를 통해 들어오는 데이터를 확인해 보니 From 부분에 컨트렉트 지갑이 있어 Null값이 들어오고 있었다 이부분을 따로 처리해 줬더니 해결이 됐다.</p>
</blockquote>

<pre><code class="language-Javascript">function Block() {

  const [latestBlocks, setLatestBlocks] = useState([]);

  useEffect(() =&gt; {
    axios
      .get("http://218.147.82.106:20000/getLastestBlocks?count=7")
      .then((response) =&gt; {
        setLatestBlocks(response.data);
      });
  }, []);

                    ...
 {latestBlocks.map((e) =&gt; (
        &lt;div className="block-category"&gt;
          &lt;div className="blockNumber"&gt;
            &lt;Link to="/getBlock" state={e.Number}&gt;{e.Number}&lt;/Link&gt;//링크를 사용하여 블록넘버 객체를 넘김
          &lt;/div&gt;
          &lt;div className="blockMiner"&gt;
            {e.Miner.slice(0, 7) + "..." + e.Miner.slice(-3)}
          &lt;/div&gt;

                ...

</code></pre>

<blockquote>
  <p>Latest Block 컴포넌트</p>
</blockquote>

<h3 id="search-bar">Search bar</h3>

<p>Search bar에서는 Block Hash, Tx Hash, Address를 입력하여 검색하면 해당 상세내용과 지갑 정보를 조회할 수 있도록 구현 하였다.</p>

<pre><code class="language-Javascript">// 해당 값을 입력하고 버튼을 선택하면 해당 컴포넌트로 바뀌게 구현
              ...
&lt;MenuItem&gt;
  &lt;Link to="/address" state={searchText}&gt;
    Address   
  &lt;/Link&gt;
&lt;/MenuItem&gt;

&lt;MenuItem&gt;
  &lt;Link to="/blockHash" state={searchText}&gt;
    Block Hash
  &lt;/Link&gt;
&lt;/MenuItem&gt;

&lt;MenuItem&gt;
  &lt;Link to="/transactionHash" state={searchText}&gt;
    Tx Hash
  &lt;/Link&gt;
&lt;/MenuItem&gt;

             ...
          
</code></pre>

<h1 id="get-page">Get page</h1>

<p>getBlock, getTransaction page는 메인 페이지에서 Block Number와 Tx Hash값을 클릭하면 해당 상세내용을 알려주는 페이지 이다.</p>

<h2 id="getblock">getBlock</h2>

<image src="https://user-images.githubusercontent.com/93482597/170237971-c948bc12-e435-4142-ba0d-12773ea955c8.png" />

<p>getBlock 컴포넌트는 메인 화면에서 Block Number를 클릭하면 해당 객체를 useLocation을 사용하여 전달받고 그 값을 엔드포인트로 사용하여 API에서 해당 값을 가져오는 페이지 이다.</p>

<blockquote>
  <p>getTransaction 컴포넌트도 같은 방식을 사용하였다.</p>
</blockquote>

<pre><code class="language-Javascript">
              ...

function Getblock() {
  const blockNum = useLocation();  // 블록넘버 객체를 받음

  const [getBlock, setGetBlock] = useState([]);
  const [getDifficulty, setGetDifficulty] = useState("");

   // 객체를 사용하요 엔드포인트 지정
  const url = "http://218.147.82.106:20000/getBlock?number=" + blockNum.state; 
  // const url = "http://218.147.82.106:20000/getBlock?number=12259937"
  useEffect(() =&gt; {
    axios.get(url).then((response) =&gt; {
      setGetBlock(response.data[0]);
    });
  }, []);

              ...


</code></pre>

<h1 id="search-page">Search page</h1>

<h2 id="address">address</h2>

<p>Address 컴포넌트는 지갑에 있는 모든 내역을 보여주기 때문에 보여줘야 할 정보가 많기 때문에 react-js-pagination라이브러리를 사용하여 pagination을 구현하였다.</p>

<pre><code class="language-Javascript">  const [postPerPage] = useState(13) //페이지당 리스트 수 (한 페이지에 13개씩 보여줌)
  const indexOfLastPost = page * postPerPage ; // 마지막 리스트 = 현재 페이지 * 페이지당 리스트
  const indexOfFirstPost = indexOfLastPost - postPerPage ; // 첫번째 리스트 = 마지막 리스트 - 페이지당 리스트
  const currentPosts = getAddress.slice(indexOfFirstPost, indexOfLastPost) // 현재 페이지에 보여줄 리스트
  const totalcount = getAddress.length / postPerPage ; // 페이지 수 = 총 리스트 수 / 페이지당 리스트 

  ...

    &lt;Pagination
            activePage={page}  // 현재 페이지
            itemsCountPerPage={1}
            totalItemsCount={totalcount}
            pageRangeDisplayed={10}
            prevPageText={"‹"}
            nextPageText={"›"}
            onChange={handlePageChange}
    /&gt;

  ...
</code></pre>

<p>blockHash, transactionHash 컴포넌트 들은 위에서 설명한 다른 컴포넌트와 구조가 비슷하다.</p>

<h1 id="회고">회고</h1>

<ul>
  <li>글을 쓰면서 코드를 둘러보니 컴포넌트간 객체를 넘겨주는 부분에서 엔드포인트를 객체로 넘겨 주었으면 환경에 따라서 엔드포인트를 변경 할 때(Swagger, Local) 좀 더 개발할 수 있었을것 같다는 생각이 들었다.</li>
  <li>API통신할 때 JSON 배열에 null 값이 있으면 slice 할때 오류가 발생하는 부분과 Pagination 부분은 잘 기억해 둬야 겠다</li>
  <li>메인 페이지에서 최신 정보를 더 볼 수 있는 버튼과 서치바를 버튼으로 구현 했는데 이부분은 리팩토링을 통해 다시 구현해 보면 좋을것 같다.</li>
  <li>프로젝트가 시작하자 마자 한분이 하차 하셔서 혼자 프론트를 진행하여 백엔드 부분을 해보지 못한것은 아쉬웠다 후에 API제작하여 연동하여 보면 좋을것 같다.</li>
</ul>]]></content><author><name>Lee Kyuhwan</name></author><category term="Project" /><category term="Project" /><category term="Blockchain" /></entry><entry><title type="html">삼각형 판별하기</title><link href="http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="삼각형 판별하기" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%82%BC%EA%B0%81%ED%98%95%ED%8C%90%EB%B3%84%ED%95%98%EA%B8%B0/"><![CDATA[<p>세 변의 길이를 가지고 삼각형이 될 수 있는지 판별하는 알고리즘 
제일 긴 한변의 길이가 나머지 두 변의 길이의 합보다 작거나 같아야 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">){</span>
                <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">YES</span><span class="dl">'</span><span class="p">,</span> <span class="nx">max</span><span class="p">;</span>
                <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span> <span class="o">+</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span> <span class="nx">max</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span>
                <span class="k">else</span> <span class="nx">max</span> <span class="o">=</span> <span class="nx">b</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">max</span><span class="p">)</span> <span class="nx">max</span> <span class="o">=</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">((</span><span class="nx">sum</span><span class="o">-</span><span class="nx">max</span><span class="p">)</span><span class="o">&lt;=</span> <span class="nx">max</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">NO</span><span class="dl">"</span><span class="p">;</span>
                <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
            <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">세 수 중 최솟값</title><link href="http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92/" rel="alternate" type="text/html" title="세 수 중 최솟값" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%84%B8%EC%88%98%EC%A4%91%EC%B5%9C%EC%86%9F%EA%B0%92/"><![CDATA[<p>조건문을 이용해 세 변수의 크기를 비교하여 문제 풀이</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">){</span>
                <span class="kd">let</span> <span class="nx">answer</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
                <span class="k">else</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">b</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">c</span> <span class="o">&lt;</span> <span class="nx">answer</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">c</span><span class="p">;</span>
                <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
            <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Lee Kyuhwan</name></author><category term="ALGORITHM" /><category term="ALGORITHM" /><category term="Inflearn" /></entry><entry><title type="html">WSL2 Jekyll 세팅</title><link href="http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="WSL2 Jekyll 세팅" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_Jekyll%EC%84%A4%EC%B9%98/"><![CDATA[<h1 id="wsl2-jekyll-세팅">WSL2 Jekyll 세팅</h1>

<h2 id="wsl2-ubuntu">WSL2 Ubuntu</h2>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04">Installation via Bash on Windows 10</a>를 확인해 보면 WSL 환경 설정 밥법이 나와있다.</p>

<p>WSL2 Ubuntu 20.04 LTS에서는 Ruby 2.7을 설치한다</p>

<p><a href="https://jekyllrb.com/docs/installation/windows/">Jekll on Windows</a></p>

<h2 id="ruby-사전준비">Ruby 사전준비</h2>

<p>레포지토리 목록 및 패키지를 업데이트</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update -y &amp;&amp; sudo apt-get upgrade -y
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo apt -y install make build-essential ruby ruby-dev
$ gem install jekyll bundler
</code></pre></div></div>

<h2 id="gem-update">gem update</h2>

<p>Ruby 설치후 github페이지 디렉토리로 이동해서 Ruby Gem 모듈을 추가 설치한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem update
</code></pre></div></div>
<p>실행 이후 나오는 오류 메시지에 따라 라이브러리를 추가 설치해 준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gem update
....생략
$ sudo apt install libxml2
$ sudo apt install libssl-dev
u sudo apt install zlib1g-dev  
</code></pre></div></div>

<blockquote>
  <p>gem update 이후 오류메시지가 없어 추가적인 라이브러리 설치는 진행하지 않았다.</p>
</blockquote>

<h2 id="bundle-update">bundle update</h2>

<p>실행하면 Gemfile정의된 모듈을 체크하고 없으면 오류 메세지를 보여준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ bundle update
....생략
$ gem install jekyll-gist
$ gem install jekyll-sitemap
$ gem install jekyll-paginate
% gem install nokogiri
$ gem install jemoji
</code></pre></div></div>

<blockquote>
  <p>bundle update 이후 오류메시지가 없어 추가적인 모듈 설치는 진행하지 않았다.</p>
</blockquote>

<h2 id="jekyll-버전-확인">Jekyll 버전 확인</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll -v
jekyll 4.2.2
</code></pre></div></div>

<h2 id="참고">참고</h2>

<p><a href="https://butteryoon.github.io/tools/2020/09/11/jekyll_wsl2.html">https://butteryoon.github.io/tools/2020/09/11/jekyll_wsl2.html</a>
<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jekyll-development-site-on-ubuntu-20-04</a></p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Blog" /><category term="Jekyll" /></entry><entry><title type="html">WSL2 Ubuntu 설치</title><link href="http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="WSL2 Ubuntu 설치" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_Ubuntu%EC%84%A4%EC%B9%98/"><![CDATA[<h1 id="windows에-wsl2설치">Windows에 WSL2설치</h1>

<h2 id="windows에-버전-확인">Windows에 버전 확인</h2>

<p>Window에 WSL2를 설치할려면 20H1 이상 버전이어야 하기 때문에 Windows + S를 누른 후 PC정보를 검색하여 버전을 확인한다.</p>

<image src="https://user-images.githubusercontent.com/93482597/167349639-1fe45331-204a-47fe-826f-00f1fee12744.png"></image>
<image src="https://user-images.githubusercontent.com/93482597/167349815-2b78137e-969f-4853-843c-cfe8b7146eb7.png"> </image>

<p>버전이 낮다면 최신 버전으로 업데이트후에 진행하면 된다.</p>

<h2 id="dism으로-wsl-기능-활성화">DISM으로 WSL 기능 활성화</h2>

<p>Windows + S 키로 Windows Terminal 이나 PowerShell을 검색한후 관리자로 실행한다</p>

<p>DISM(배포 이미지 서비스 및 관리) 명령어로 Microsoft-Windows-Subsystem-Linux 기능을 활성화</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
</code></pre></div></div>

<p>DISM 명령어로 VirtualMachinePlatform 기능을 활성화 한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
</code></pre></div></div>

<p>이후 재부팅 한다.</p>

<h2 id="wsl2-설치">WSL2 설치</h2>

<p>아래 링크에서 WSL2를 설치</p>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/install#step-4---download-the-linux-kernel-update-package">WSL 설치 | Microsoft Docs</a>
<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">WSL2 Linux 커널 업데이트 패키지</a></p>

<p>터미널을 열고 WSL 버전을 2로 변경한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl --set-default-version 2
</code></pre></div></div>

<h2 id="ubuntu-설치">Ubuntu 설치</h2>

<p><a href="https://aka.ms/wslstore">Microsft Store</a>에서 Ubuntu 배포판을 설치</p>

<p>설치 이 후 우분투 사용자 이름과 패스워드를 지정한다.</p>

<p>이후 터미널에서</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl -l -v
</code></pre></div></div>
<p>를 입력하여 버전을 확인한다</p>

<h2 id="참고">참고</h2>
<p><a href="https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#windows-10%EC%97%90-wsl2-%EC%84%A4%EC%B9%98%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95">https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#windows-10%EC%97%90-wsl2-%EC%84%A4%EC%B9%98%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95</a>
<a href="https://psychoria.tistory.com/734">https://psychoria.tistory.com/734</a></p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Ubuntu" /></entry><entry><title type="html">WSL2 Git &amp;amp; VScode</title><link href="http://localhost:4000/wsl2/WSL2_git/" rel="alternate" type="text/html" title="WSL2 Git &amp;amp; VScode" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/wsl2/WSL2_git</id><content type="html" xml:base="http://localhost:4000/wsl2/WSL2_git/"><![CDATA[<h1 id="git">Git</h1>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-git">WSL_git_docs</a> 참고</p>

<p>Ubuntu 터미널에서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install git
</code></pre></div></div>
<p>입력후 설치</p>

<p>혹은 <a href="https://git-scm.com/download/win">Windows Git</a>에서 설치</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
</code></pre></div></div>

<p>을 입력하여 네입과 이메일 입력 제대로 입력하지 않으면 잔디가 심어지지 않는다</p>

<h1 id="vscode">VScode</h1>

<p><a href="https://docs.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-vscode">WSL_VScode_docs</a> 참고</p>

<h2 id="ubuntu-업데이트">Ubuntu 업데이트</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h2 id="wget">Wget</h2>

<p>wget(웹 서버에서 콘텐츠를 검색하기 위해) 및 ca 인증서(SSL 기반 애플리케이션이 SSL 연결의 신뢰성을 확인할 수 있도록 허용)를 추가</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install wget ca-certificates
</code></pre></div></div>
<p>git clone한 repository에서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>code .
</code></pre></div></div>

<p>를 입력 하면 설치 후 VScode가 실행 된다</p>]]></content><author><name>Lee Kyuhwan</name></author><category term="WSL2" /><category term="WSL2" /><category term="Blog" /><category term="Git" /><category term="VScode" /></entry></feed>